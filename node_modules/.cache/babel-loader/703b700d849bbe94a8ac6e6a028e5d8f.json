{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue","mtime":1575425846000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,OAFA,qBAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAA,eAAA,CAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,MAAA,GAAA,CAAA,OAAA,CACA,UAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,WAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA,OALA;AAOA,aAAA,MAAA;AACA;;AACA,aAAA,OAAA,CAAA,KAAA,EAAA,CAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;A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","sourcesContent":["<template>\n    <div id=\"barchart\">\n        <h3>Median Delay By Airport Barchart (Top 8)</h3>\n        <svg id=\"chart\" height=600 width=1200></svg>\n        <h3>Median Delay By Carrier Barchart</h3>\n        <svg id='carrir' height=600 width=1200></svg>\n        <h3>Delay Rate By Carrier And Day of Week Bubble Chart</h3>\n        <center>\n        <svg id='bubble' width=\"932\" height=\"932\"></svg>\n        </center>\n        <ul style=\"list-style-type:none;\">\n            <li>Weekends are good days to travel</li>\n            <li>Avoid Mondays</li>\n            <li>While, you get what you pay for</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import * as d3 from 'd3';\n    export default {\n        name: \"BarChart\",\n        mounted(){\n\n        //     function removeZeroValue(arr){\n        //         var newArr=[];\n        //         arr.forEach(\n        //             function(e){\n        //                 if (e['ARR_DELAY']>0){\n        //                     newArr.push(e)\n        //                 }\n        //             }\n        //         );\n        //         return newArr;\n        //     }\n        //     function groupBy( array , f ) {\n        //         let groups = {};\n        //         array.forEach( function( o ) {\n        //             let group = JSON.stringify( f(o) );\n        //             groups[group] = groups[group] || [];\n        //             groups[group].push( o );\n        //         });\n        //         return Object.keys(groups).map( function( group ) {\n        //             return groups[group];\n        //         });\n        //     }\n        //     d3.csv('./data/Flights.csv',function(d){\n        //         return {\n        //             DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n        //             ARR_DELAY:+d.ARR_DELAY\n        //         };\n        //     }).then(\n        //         function(data){\n        //             var dataProcessed=removeZeroValue(data);\n        //             var sorted = groupBy(dataProcessed, function(item){\n        //                 return [item.DEST_AIRPORT_ID];\n        //             });\n        //             var count=0.0;\n        //             var dataGroup=new Array()\n        //             var dic=new Array()\n        //             sorted.forEach(\n        //                 function(e){\n        //                     count=0\n        //                     e.forEach(\n        //                         function(m){\n        //                             count=count+m['ARR_DELAY'];\n        //                         }\n        //                     )\n        //                     dic=[]\n        //                     dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n        //                     dic['Count']=count\n        //                     dataGroup.push(dic)\n        //                 }\n        //             )\n        //\n        //\n        //\n        //\n        //\n        //             var xScale = d3.scaleBand()\n        //                 .round(true)\n        //                 .paddingInner(0.05);\n        //\n        //             xScale.domain(dataGroup.map(function (d) {\n        //                 return d.DEST_AIRPORT_ID;\n        //             }))\n        //                 .range([0, 1500]);\n        //             var height=700;\n        //             var yScale = d3.scaleLinear();\n        //             var maxnum=0\n        //             var minnum=10000000\n        //             for (var i=0;i<dataGroup.length;i++){\n        //                 if (dataGroup[i]['Count']>maxnum){\n        //                     maxnum=dataGroup[i]['Count']\n        //                 }\n        //                 if (dataGroup[i]['Count']<minnum){\n        //                     minnum=dataGroup[i]['Count']\n        //                 }\n        //             }\n        //\n        //             yScale.domain([minnum,maxnum])\n        //                 .range([100,height]);\n        //             dataGroup.forEach(function(e){\n        //                 console.log(yScale(e.Count))\n        //             })\n        //\n        //\n        //\n        //\n        //\n        //             var yAxis = d3.axisLeft()\n        //                 .scale(yScale);\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'y axis')\n        //                 .attr('transform', 'translate(70,' +50  + ')')\n        //                 .call(yAxis);\n        //\n        //\n        //             var xAxis = d3.axisBottom()\n        //                 .scale(xScale);\n        //\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'x axis')\n        //                 .attr('transform', 'translate(0,' +height  + ')')\n        //                 .call(xAxis);\n        //\n        //             d3.select(\"#chart\")\n        //                 .selectAll(\"div\")\n        //                 .data(dataGroup)\n        //                 .enter()\n        //                 .append('rect')\n        //                 .attr('class','rect')\n        //                 .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)})\n        //                 .attr('y',function(d){return height-yScale(d.Count)})\n        //                 .attr('height',function(d){return yScale(d.Count)})\n        //                 .attr('width',5)\n        //                 .style(\"fill\",\"lightpink\");\n        //\n        //\n        //             d3.select(\"#chart\").selectAll('div')\n        //                 .data(dataGroup, function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .enter()\n        //                 .append('text')\n        //                 .text(function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .attr('class', 'ac')\n        //                 .attr('x', function (d) {\n        //                     return xScale(d.DEST_AIRPORT_ID) + xScale.bandwidth() / 2-10;\n        //                 })\n        //                 .attr('y',  function(d){return height-yScale(d.Count)}\n        //                 )\n        //                 .attr('opacity','0')\n        //\n        //         }\n        //     )\n            function removeZeroValue(arr){\n                var newArr=[];\n                arr.forEach(\n                    function(e){\n                        if (Math.abs(e['ARR_DELAY'])>0){\n                            newArr.push(e)\n                        }\n                    }\n                );\n                return newArr;\n            }\n            function groupBy( array , f ) {\n                let groups = {};\n                array.forEach( function( o ) {\n                    let group = JSON.stringify( f(o) );\n                    groups[group] = groups[group] || [];\n                    groups[group].push( o );\n                });\n                return Object.keys(groups).map( function( group ) {\n                    return groups[group];\n                });\n            }\n            function maxarr(arr,len){\n                var max=[];\n                arr.sort(function(a,b){\n                    return a['Count']-b['Count']\n                })\n                for (var i=0;i<len;i++){\n                    max.push(arr.pop())\n                }\n                return max.reverse()\n            }\n            d3.csv('data/flights_iata.csv',function(d){\n                return {\n                    DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n                    ARR_DELAY:+d.ARR_DELAY,\n                    Origin:d.Description_origin,\n                    Dest:d.Description_dest,\n                    Carrir:d.OP_UNIQUE_CARRIER\n                };\n            }).then(\n                function(data){\n\n                    var dataProcessed=removeZeroValue(data);\n                    // debugger;\n                    var sorted = groupBy(dataProcessed, function(item){\n                        return [item.DEST_AIRPORT_ID];\n                    });\n                    var count=0.0;\n                    var num=0.0;\n                    var dataGroup=new Array()\n                    var dic=new Array()\n                    sorted.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n                            dic['Count']=count/num\n                            var list=[]\n                            list=e[0]['Dest'].split(\",\")\n                            dic['DEST_DESCRIPTION']=list\n                            // debugger;\n                            dataGroup.push(dic)\n                        }\n                    )\n\n                    var topN=10;\n\n                    dataGroup=maxarr(dataGroup,topN);\n                    // debugger;\n                    var xScale = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    // debugger;\n                    xScale.domain(dataGroup.map(function (d) {\n                        // debugger;\n                        return d.DEST_AIRPORT_ID;\n                    }))\n                        .range([70, 1470]);\n                    var height=500;\n                    var yScale = d3.scaleLinear();\n                    var maxnum=0\n                    var minnum=10000000\n                    for (var i=0;i<dataGroup.length;i++){\n                        if (dataGroup[i]['Count']>maxnum){\n                            maxnum=dataGroup[i]['Count']\n                        }\n                        if (dataGroup[i]['Count']<minnum){\n                            minnum=dataGroup[i]['Count']\n                        }\n                    }\n\n                    yScale.domain([maxnum,minnum/2])\n                        .range([100,height]);\n\n\n\n\n\n\n                    var yAxis = d3.axisLeft()\n                        .scale(yScale);\n                    d3.select(\"#chart\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis);\n                   \n                   d3.select(\"#chart\").append('g').call(\n                        d3.axisBottom(xScale).tickValues([])\n                    ).attr('transform', 'translate(0,500)')\n\n\n                    d3.select(\"#chart\").append(\"text\").text(\"City Name\").attr(\"x\",600).attr(\"y\",530)\n\n\n\n                    //var xAxis = d3.axisBottom()\n                       // .scale(xScale.);\n\n                    //d3.select(\"#chart\").append('g')\n                      //  .attr('class', 'x axis')\n                        //.attr('transform', 'translate(0,' +height  + ')')\n                        //.call(xAxis.tickSize(0));\n\n                    d3.select(\"#chart\")\n                        .selectAll(\"div\")\n                        .data(dataGroup)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)+300/(1.5*topN)})\n                        .attr('y',function(d){return yScale(d.Count)})\n                        .attr('height',function(d){return height-yScale(d.Count)})\n                        .attr('width',1400/(1.5*topN))\n                        .style(\"fill\",\"lightpink\");\n\n\n                    d3.select(\"#chart\").selectAll('div')\n                        .data(dataGroup, function (d) {\n                            return d.DEST_AIRPORT_ID;\n                        })\n                        .enter()\n                        .append('text')\n                        .text(function (d) {\n                            return d.DEST_DESCRIPTION[0];\n                        })\n                        .attr('class', 'ac')\n                        .attr('x', function (d) {\n                            return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[0].length/2-30;\n                        })\n                        .attr('y',  function(d){return yScale(d.Count)-20}\n                        )\n                        .attr('opacity','0')\n\n\n                    // d3.select(\"#chart\").selectAll('div')\n                    //     .data(dataGroup, function (d) {\n                    //         return d.DEST_AIRPORT_ID;\n                    //     })\n                    //     .enter()\n                    //     .append('text')\n                    //     .text(function (d) {\n                    //         return d.DEST_DESCRIPTION[1];\n                    //     })\n                    //     .attr('class', 'ac')\n                    //     .attr('x', function (d) {\n                    //         return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[1].length/2-70;\n                    //     })\n                    //     .attr('y',  function(d){return height-yScale(d.Count)}\n                    //     )\n                    //     .attr('opacity','0.5')\n                    //     .attr('font-size','13')\n\n\n\n\n\n                    var sorted_carrir = groupBy(dataProcessed, function(item){\n                        return [item.Carrir];\n                     });\n                    //var count=0.0;\n                    //var num=0.0;\n                    var dataGroup_carrir=new Array()\n                    dic=[]\n                    //var dic=new Array()\n                    sorted_carrir.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['Carrir']=e[0]['Carrir']\n                            dic['Count']=count/num\n                            dataGroup_carrir.push(dic)\n                        }\n                    )\n\n\n\n                    var xScale_carrir = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    xScale_carrir.domain(dataGroup_carrir.map(function (d) {\n                        return d.Carrir;\n                    }))\n                        .range([70, 1470]);\n                    height=500;\n                    var yScale_carrir = d3.scaleLinear();\n                    maxnum=0\n                    minnum=10000000\n                    for (i=0;i<dataGroup_carrir.length;i++){\n                        if (dataGroup_carrir[i]['Count']>maxnum){\n                            maxnum=dataGroup_carrir[i]['Count']\n                        }\n                        if (dataGroup_carrir[i]['Count']<minnum){\n                            minnum=dataGroup_carrir[i]['Count']\n                        }\n                    }\n\n                    yScale_carrir.domain([maxnum,minnum])\n                        .range([200,height]);\n\n\n\n\n\n\n                    var yAxis_carrir = d3.axisLeft()\n                        .scale(yScale_carrir);\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis_carrir);\n\n\n                    var xAxis_carrir = d3.axisBottom()\n                        .scale(xScale_carrir);\n\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'x axis')\n                        .attr('transform', 'translate(0,' +height  + ')')\n                        .call(xAxis_carrir.tickSize(0));\n\n                    d3.select(\"#carrir\")\n                        .selectAll(\"div\")\n                        .data(dataGroup_carrir)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale_carrir(d.Carrir)+10})\n                        .attr('y',function(d){return yScale_carrir(d.Count)})\n                        .attr('height',function(d){return height-yScale_carrir(d.Count)})\n                        .attr('width',80)\n                        .style(\"fill\",\"lightblue\");\n                }\n            )\n\n            d3.json(\"data/bubble.json\") \n    .then(function (data) { \n        //insert chart code here ...\n        var color, width, height, pack;\n\n        color = d3.scaleLinear()\n    .domain([0, 3])\n    .range([\"hsl(332,80%,85%)\", \"hsl(326,67%,14%)\"])\n    .interpolate(d3.interpolateHcl)\n\n    //format = d3.format(\",d\")\n\n    width = 932\n\n    height = width\n\n    pack = data => d3.pack()\n    .size([width, height])\n    .padding(3)(d3.hierarchy(data).sum(d => d.value)\n    .sort((a, b) => b.value - a.value))\n\n    const root = pack(data);\n  let focus = root;\n  let view;\n\n  const svg = d3.select('#bubble')\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n      .style(\"display\", \"block\")\n      .style(\"margin\", \"0 -14px\")\n      .style(\"background\", color(0))\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", () => zoom(root));\n\n  const node = svg.append(\"g\")\n    .selectAll(\"circle\")\n    .data(root.descendants().slice(1))\n    .join(\"circle\")\n      .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n      .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n      .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n      .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n      .on(\"click\", d => focus !== d && (zoom(d), d3.event.stopPropagation()));\n\n  const label = svg.append(\"g\")\n      .style(\"font\", \"10px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n    .selectAll(\"text\")\n    .data(root.descendants())\n    .join(\"text\")\n      .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n      .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n      .text(d => d.data.name);\n\n  zoomTo([root.x, root.y, root.r * 2]);\n\n  function zoomTo(v) {\n    const k = width / v[2];\n\n    view = v;\n\n    label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"r\", d => d.r * k);\n  }\n\n  function zoom(d) {\n    //const focus0 = focus;\n\n    focus = d;\n\n    const transition = svg.transition()\n        .duration(d3.event.altKey ? 7500 : 750)\n        .tween(\"zoom\", _d => {\n          const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n          return t => zoomTo(i(t));\n        });\n\n    label\n      .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n      .transition(transition)\n        .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n        .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n        .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n  }\n});\n\n\n\n\n        }\n    }\n</script>\n\n<style>\n    .ac:hover{\n        opacity:1;\n    }\n</style>"],"sourceRoot":"src/components"}]}