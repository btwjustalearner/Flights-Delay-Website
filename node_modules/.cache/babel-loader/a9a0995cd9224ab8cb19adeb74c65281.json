{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/Map2.vue","mtime":1575442457000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"flight-map\">\n        <div id=\"footer\">\n        <span>U.S. Commercial Flights</span>, 2018\n        <div class=\"hint\">\n      mouseover for flights from each airport\n    </div>\n        </div>\n        <center>\n      <p>Filter By:\n          <button name=\"all\" class=\"btn btn-default\" id=\"all\">All</button>\n          <button name=\"ua\" class=\"btn btn-default\" id=\"ua\">United</button>\n          <button name=\"aa\" class=\"btn btn-default\" id=\"aa\">American</button>\n          <button name=\"as\" class=\"btn btn-default\" id=\"as\">Alaska</button>\n          <button name=\"nk\" class=\"btn btn-default\" id=\"nk\">Spirit</button>\n          <br>\n          <button name=\"dl\" class=\"btn btn-default\" id=\"dl\">Delta</button>\n          <button name=\"ha\" class=\"btn btn-default\" id=\"ha\">Hawaiian</button>\n          <button name=\"wn\" class=\"btn btn-default\" id=\"wn\">Southwest</button>\n          <button name=\"b6\" class=\"btn btn-default\" id=\"b6\">JetBlue</button>\n          <button name=\"f9\" class=\"btn btn-default\" id=\"f9\">Frontier</button>     \n      </p>\n      </center>\n        <svg width=\"960\" height=\"700\"></svg>\n        <p>Top 10 busy airport</p>\n        <svg width=\"800\" height=\"700\" id=\"chart\"></svg>\n    </div>\n</template>\n\n<script>\n\nfunction groupBy( array , f ) {\n                let groups = {};\n                array.forEach( function( o ) {\n                    let group = JSON.stringify( f(o) );\n                    groups[group] = groups[group] || [];\n                    groups[group].push( o );\n                });\n                return Object.keys(groups).map( function( group ) {\n                    return groups[group];\n                });\n            }\nfunction maxarr(arr,len){\n                var max=[];\n                arr.sort(function(a,b){\n                    return a['Count']-b['Count']\n                })\n                for (var i=0;i<len;i++){\n                    max.push(arr.pop())\n                }\n                return max.reverse()\n            }\nfunction preparedata(flights){\n    var grouped_all = groupBy(flights, function(item){\n                        return [item.origin];\n                    });\n                    var count=0.0;\n                    var num=0.0;\n                    var group_all=new Array()\n                    var dic=new Array()\n                    //console.log(grouped_all)\n                    grouped_all.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+parseInt(m['delay']);\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['origin']=e[0]['origin']\n                            dic['delay']=count/num\n                            //console.log(dic)\n                            group_all.push(dic)\n                        }\n                    )\n\n\n                    \n\n                    var N=10\n                    group_all=maxarr(group_all,N)\n                    return group_all;\n}\nfunction update(data) {\n            data=data.sort(function(a,b){\n                return a.delay-b.delay;\n            })\n             var svg = d3.select(\"#chart\");\n             var rects = svg.selectAll(\"rect\")\n             .data(data, function (d) { return d.origin; });\n             rects.exit() //EXIT SELECTION -- here we decide to exit first\n             .transition()\n             .delay(1000)\n             .duration(1000)\n             .style(\"opacity\", 0)\n             .remove();\n\n             var yScale = d3.scaleLinear();\n                    var maxnum=0\n                    var minnum=10000000\n                    for (var i=0;i<data.length;i++){\n                        if (data[i]['delay']>maxnum){\n                            maxnum=data[i]['delay']\n                        }\n                        if (data[i]['delay']<minnum){\n                            minnum=data[i]['delay']\n                        }\n                    }\n\n                    yScale.domain([maxnum,minnum])\n                        .range([100,600]);\n\n\n\n            var colorlist=['#FF0000','#FF006B','#FF00EB','#CA00FF','#3800FF','#0000FF','#0094FF','#00FFFF','#00FFAD','#00FF00'];\n\n             rects.enter() //ENTER\n             .append(\"rect\")\n             .attr(\"fill\", function(d) { return d.c; })\n             .merge(rects) // UPDATE + ENTER\n             .transition()\n             .duration(3000)\n             .delay(function(d, i) { return i * 100; })\n             .attr(\"x\", 0)\n             .attr(\"y\", function(d, i) { return i * 35; })\n             .attr(\"width\", function(d) { return yScale(d.delay); })\n             .attr(\"height\", 25)\n             .attr(\"fill\", function(d, i) { return colorlist[i]; });\n            \n\n            svg.selectAll(\"#text\").remove();\n            var text=svg.selectAll(\"text\").data(data, function (d) { return d.origin; })\n            text.enter().append(\"text\")\n            .merge(rects) // UPDATE + ENTER\n             .transition()\n             .duration(3000)\n             .delay(function(d, i) { return i * 100; })\n            .text(function(d){\n                return d.origin;\n            }).attr(\"x\",function(d) { return yScale(d.delay)+50; })\n            .attr(\"y\", function(d, i) { return i * 35+20; })\n            .attr(\"id\",\"text\")\n\n\n             \n            }\n            \n\n\n\n\n\n    import * as d3 from 'd3v4';\n    import * as topojson from 'topojson';\n    export default {\n        name: \"Map2\",\n        mounted(){\n            var svg = d3.select(\"svg\"),\n                width = +svg.attr(\"width\"),\n                height = +svg.attr(\"height\");\n\n            var projection = d3.geoAlbers()\n                .translate([width *0.6, height * 0.6])\n                .scale(550);\n\n            // var radius = d3.scaleSqrt()\n            //     .domain([0, 100])\n            //     .range([0, 14]);\n\n            var path = d3.geoPath()\n                .projection(projection)\n                .pointRadius(2.5);\n\n            var voronoi = d3.voronoi()\n                .extent([[-1, -1], [width + 1, height + 1]]);\n\n            var filter_mode = \"#all\";\n            setFilterMode(filter_mode)\n\n            var airports0;\n            var flights0;\n            var us0;\n\n            d3.queue()\n                .defer(d3.json, \"data/us.json\")\n                .defer(d3.csv, \"data/airports.csv\", typeAirport)\n                .defer(d3.csv, \"data/flights-aggregation.csv\", typeFlight)\n                .await(ready);\n\n            function ready(error, us, airports, flights) {\n                if (error) throw error;\n                flights0 = flights.slice();\n                airports0 = airports.slice();\n                us0 = us;\n                // console.log(airports[2531])\n                flights = flights.filter(d => d.carrier == 'all');\n\n                var airportByIata = d3.map(airports, function(d) { return d.iata; });\n\n                flights.forEach(function(flight) {\n                    var source = airportByIata.get(flight.origin),\n                        target = airportByIata.get(flight.destination);\n                    source.arcs.coordinates.push([source, target]);\n                    target.arcs.coordinates.push([target, source]);\n                    source.delay = flight.delay;\n                });\n                // console.log(airports)\n\n                \n\n                airports = airports\n                    .filter(function(d) { return d.arcs.coordinates.length; });\n\n\n                svg.append(\"path\")\n                    .datum(topojson.feature(us, us.objects.land))\n                    .attr(\"class\", \"land\")\n                    // .style('fill','#ddd')\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n                    .attr(\"class\", \"state-borders\")\n                    // .style('fill','none')\n                    // .style('stroke','#fff')\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum({type: \"MultiPoint\", coordinates: airports})\n                    .attr(\"class\", \"airport-dots\")\n                    .attr(\"d\", path);\n\n                var airport = svg.selectAll(\".airport\")\n                    .data(airports)\n                    .enter().append(\"g\")\n                    .attr(\"class\", \"airport\");\n\n                airport.append(\"title\")\n                    .text(function(d) { return d.iata + \"\\n\" + d.arcs.coordinates.length + \" flights\" + \"\\n\"+\"median delay: \"+d.delay +\" minutes\"; });\n\n                airport.append(\"path\")\n                    .attr(\"class\", \"airport-arc\")\n                    // .style('fill','none')\n                    .attr(\"d\", function(d) { return path(d.arcs); })\n                    .on(\"mouseover\", function(d) { d3.select(\"#footer span\").text(d.name); });\n\n                airport.append(\"path\")\n                    .data(voronoi.polygons(airports.map(projection)))\n                    .attr(\"class\", \"airport-cell\")\n                    .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n                \n                var chart_data=preparedata(flights);\n    update(chart_data);\n\n\n            }\n\n            function typeAirport(d) {\n                d[0] = +d.longitude;\n                d[1] = +d.latitude;\n                d.arcs = {type: \"MultiLineString\", coordinates: []};\n                d.delay = null;\n                \n                return d;\n            }\n\n            function typeFlight(d) {\n                d.count = +d.count;\n                return d;\n            }\n\n            //filter\n\n    //console.log(airports)\n\n    d3.select(\"#all\")\n    .on(\"click\", function () {\n    setFilterMode(\"#all\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'all');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    \n\n\n\n\n\n\n\n\n    var chart_data=preparedata(flights)\n    update(chart_data)\n\n\n   \n    });\n    \n\n\n    //console.log(airports)\n\n    d3.select(\"#ua\")\n    .on(\"click\", function () {\n    setFilterMode(\"#ua\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'UA');\n    airports = airports0;\n    us = us0;\n    airports.arcs = {type: \"MultiLineString\", coordinates: []};\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#aa\")\n    .on(\"click\", function () {\n    setFilterMode(\"#aa\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'AA');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#as\")\n    .on(\"click\", function () {\n    setFilterMode(\"#as\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'AS');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#nk\")\n    .on(\"click\", function () {\n    setFilterMode(\"#nk\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'NK');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#dl\")\n    .on(\"click\", function () {\n    setFilterMode(\"#dl\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'DL');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#ha\")\n    .on(\"click\", function () {\n    setFilterMode(\"#ha\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'HA');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#wn\")\n    .on(\"click\", function () {\n    setFilterMode(\"#wn\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'WN');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#b6\")\n    .on(\"click\", function () {\n    setFilterMode(\"#b6\")\n    var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'B6');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#f9\")\n    .on(\"click\", function () {\n    setFilterMode(\"#f9\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'F9');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    function setFilterMode(id) {\n    d3.select(\"#all\").style(\"background-color\", \"white\");\n    d3.select(\"#ua\").style(\"background-color\", \"white\");\n    d3.select(\"#aa\").style(\"background-color\", \"white\");\n    d3.select(\"#as\").style(\"background-color\", \"white\");\n    d3.select(\"#nk\").style(\"background-color\", \"white\");\n    d3.select(\"#dl\").style(\"background-color\", \"white\");\n    d3.select(\"#ha\").style(\"background-color\", \"white\");\n    d3.select(\"#wn\").style(\"background-color\", \"white\");\n    d3.select(\"#b6\").style(\"background-color\", \"white\");\n    d3.select(\"#f9\").style(\"background-color\", \"white\");\n    d3.select(id).style(\"background-color\", \"grey\");\n    filter_mode = id;\n}\n\n    function transitionMap(us,airports,flights) {\n        //airports = [];\n        // console.log(airports[2531]) \n        // airports = d3.csv('data/airports.csv', typeAirport)    \n\n        var airportByIata = d3.map(airports, function(d) { return d.iata; });\n\n\n            airports.forEach(function(airport) {\n                airport.arcs.coordinates = [];\n            });\n\n                flights.forEach(function(flight) {\n                    var source = airportByIata.get(flight.origin),\n                        target = airportByIata.get(flight.destination);\n                    source.arcs.coordinates.push([source, target]);\n                    target.arcs.coordinates.push([target, source]);\n                    source.delay = flight.delay;\n                });\n\n                airports = airports\n                    .filter(function(d) { return d.arcs.coordinates.length; });\n\n                svg.append(\"path\")\n                    .datum(topojson.feature(us, us.objects.land))\n                    .attr(\"class\", \"land\")\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n                    .attr(\"class\", \"state-borders\")\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum({type: \"MultiPoint\", coordinates: airports})\n                    .attr(\"class\", \"airport-dots\")\n                    .attr(\"d\", path);\n\n                var airport = svg.selectAll(\".airport\")\n                    .data(airports)\n                    .enter().append(\"g\")\n                    .attr(\"class\", \"airport\");\n                airport.append(\"title\")\n                    .text(function(d) { return d.iata + \"\\n\" + d.arcs.coordinates.length + \" flights\" + \"\\n\"+\"median delay: \"+d.delay +\" minutes\"; });\n\n                airport.append(\"path\")\n                    .attr(\"class\", \"airport-arc\")\n                    // .style('fill','none')\n                    .attr(\"d\", function(d) { return path(d.arcs); })\n                    .on(\"mouseover\", function(d) { d3.select(\"#footer span\").text(d.name); });\n\n                airport.append(\"path\")\n                    .data(voronoi.polygons(airports.map(projection)))\n                    .attr(\"class\", \"airport-cell\")\n                    .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n        \n}\n\n\n        }\n    }\n</script>\n<style>\n\n    .land {\n        fill: #ddd;\n    }\n\n    .state-borders {\n        fill: none;\n        stroke: #fff;\n    }\n\n    .airport-arc {\n        fill: none;\n    }\n\n    .airport:hover .airport-arc {\n        stroke: #f00;\n    }\n\n    .airport-cell {\n        fill: none;\n        stroke: #000;\n        stroke-opacity: 0.1;\n        pointer-events: all;\n    }\n\n</style>"],"sourceRoot":"src/components"}]}