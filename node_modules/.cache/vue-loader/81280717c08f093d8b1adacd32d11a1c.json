{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/DashBoard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/DashBoard.vue","mtime":1575351219000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRoLCB0ZCB7CiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKfQoKdGFibGUgewogICAgZm9udC1mYW1pbHk6ICJUcmVidWNoZXQgTVMiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgIHdpZHRoOiAxMDAlOwp9Cgp0YWJsZSB0ZCwgdGFibGUgdGggewogICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAgIHBhZGRpbmc6IDhweDsKfQoKdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fQoKdGFibGUgdHI6aG92ZXIge2JhY2tncm91bmQtY29sb3I6ICNkZGQ7fQoKdGFibGUgdGggewogICAgcGFkZGluZy10b3A6IDEycHg7CiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwOwogICAgY29sb3I6IHdoaXRlOwp9Cgojc3ZnQ29udGFpbmVyewogICAgbWFyZ2luLXRvcDogMTAwcHg7Cn0KI3N1Z2dlc3Rpb24tYmFyLWNoYXJ0ewogICAgbWFyZ2luOiBhdXRvOwogICAgbWFyZ2luLXRvcDogNTBweDsKfQoKLmJhci0tcG9zaXRpdmUgewogICAgZmlsbDogc3RlZWxibHVlOwp9CgouYmFyLS1uZWdhdGl2ZSB7CiAgICBmaWxsOiBkYXJrb3JhbmdlOwp9CgouYXhpcyB0ZXh0IHsKICAgIGZvbnQ6IDEwcHggc2Fucy1zZXJpZjsKfQoKLmF4aXMgcGF0aCwKLmF4aXMgbGluZSB7CiAgICBmaWxsOiBub25lOwogICAgc3Ryb2tlOiAjMDAwOwogICAgc2hhcGUtcmVuZGVyaW5nOiBjcmlzcEVkZ2VzOwp9Cg=="},{"version":3,"sources":["DashBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DashBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <form>\n            <md-autocomplete v-model=\"selectedDeparture\" :md-options=\"flights\" id=\"departure-suggestion-input\">\n                <label>Departure</label>\n            </md-autocomplete>\n\n            <md-autocomplete v-model=\"selectedArrival\" :md-options=\"flights\" md-dense id=\"arrival-suggestion-input\">\n                <label>Arrival</label>\n            </md-autocomplete>\n            <md-button type=\"submit\" class=\"md-primary\" v-on:click=\"handleSubmit\">Submit</md-button>\n            <md-button type=\"submit\" class=\"md-primary\" v-on:click=\"handleReset\">Reset</md-button>\n        </form>\n\n        <div id=\"flights-information-container\" style=\"display:none\">\n\n        </div>\n\n        <div id=\"svgContainer\"></div>\n    </div>\n</template>\n\n<script>\n    import * as d3 from 'd3';\n    function handleSubmit(event){\n        event.preventDefault();\n        var ele = document.getElementById('flights-information-container');\n        ele.innerText = \"\"\n        ele.style.display='block';\n        var title = document.createElement('h3');\n        title.innerText = \"From \" + this.selectedDeparture + \" to \" + this.selectedArrival;\n        ele.append(title);\n        var table = this.constructTable(this.selectedDeparture,this.selectedArrival);\n        ele.append(table);\n        var flights = this.flightInfo[this.selectedDeparture + \"=>\" + this.selectedArrival];\n        document.getElementById('svgContainer').innerText =  \"\";\n        createBarChart(flights);\n\n    }\n    function handleReset(event){\n        event.preventDefault();\n        var ele = document.getElementById('flights-information-container');\n        ele.style.display='none';\n        this.text = \"\";\n        var svg=document.getElementById('svgContainer');\n        svg.innerText = \"\";\n\n    }\n\n    function constructTable(origin,destination){\n        var root = document.createElement('table');\n        var header = document.createElement('tr');\n        var carrier = document.createElement('th');\n        carrier.innerText = \"CARRIER\"\n        var delay = document.createElement('th');\n        delay.innerText = 'DELAY';\n        header.append(carrier);\n        header.append(delay);\n        root.append(header);\n        var flights = this.flightInfo[origin + \"=>\" + destination];\n        flights.sort(function(x, y) {\n            return x.delay - y.delay;\n        });\n        for (let flight of flights){\n            var ele = document.createElement('tr');\n            var child1 = document.createElement('td');\n            var child2 = document.createElement('td');\n            child1.innerText = flight.carrier;\n            child2.innerText = flight.delay;\n            ele.append(child1);\n            ele.append(child2);\n            root.append(ele);\n        }\n        return root;\n    }\n\n    function createBarChart(flights){\n        var container = d3.select('#svgContainer');\n        container.append('h3');\n        container.select('h3').innerText = \"Barchart of The Recommendations\";\n\n        var margin = {top: 20, right: 30, bottom: 40, left: 30},\n            width = 960 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n        var padding = 0.05;\n\n        var barwidth = (height - (flights.length) * (padding * height)) / flights.length;\n\n        var xRange = [-40,40];\n        var x = d3.scaleLinear()\n            .domain(xRange)\n            .range([0, width]);\n\n        var carrier =[];\n        for (let flight of flights){\n            carrier.push(flight.carrier);\n        }\n\n        var y = d3.scaleBand()\n            .range([0, height]).domain(carrier).paddingInner(padding);\n\n\n        var xAxis = d3.axisBottom()\n            .scale(x);\n\n        var yAxis = d3.axisLeft()\n            .scale(y);\n            // .tickSize(0)\n            // .tickPadding(6);\n\n        var svg = d3.select(\"#svgContainer\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        // debugger;\n        x.domain(xRange);\n        svg.selectAll(\".bar\")\n            .data(flights)\n            .enter().append(\"rect\")\n            .attr(\"class\", function(d) { return \"bar bar--\" + (d.delay< 0 ? \"negative\" : \"positive\"); })\n            .attr(\"x\", function(d) {\n                if (d.delay < 0){\n                    return x(d.delay);\n                }\n                else{\n                    return x(0);\n                }\n            })\n            .attr(\"y\", function(d) { return y(d.carrier) + padding * height / 2; })\n            .attr(\"width\", function(d) {\n                var width =  Math.abs(x(d.delay) - x(0));\n                return width;\n            })\n            .attr(\"height\", barwidth);\n\n        svg.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n            .call(yAxis);\n\n        svg.append(\"text\")\n            .attr(\"x\", (width / 2))\n            .attr(\"y\", height + margin.top + 10)\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"20px\")\n            .style(\"text-decoration\", \"underline\")\n            .text(\"Ahead(-), Delay(+)\");\n    }\n\n\n    function fetchData(response) {\n        var locations = new Set();\n        for(let datum of response){\n            if (datum.carrier === 'all'){\n                continue;\n            }\n            locations.add(datum.origin);\n            locations.add(datum.destination);\n            let key = datum.origin + \"=>\" +datum.destination;\n            if (this.flightInfo[key] === undefined){\n                this.flightInfo[key] = new Array();\n            }\n            this.flightInfo[key].push({carrier: datum.carrier, delay: parseFloat(datum.delay)});\n        }\n        for (let loc of locations){\n            this.flights.push(loc);\n        }\n        this.flights.sort();\n    }\n\n\n    export default {\n        name: 'AutocompleteStatic',\n        methods: {\n            handleSubmit,handleReset,fetchData,constructTable,createBarChart\n\n        },\n        data: () => ({\n            selectedDeparture: null,\n            selectedArrival: null,\n            flights:[],\n            flightInfo:{}\n        }),\n        mounted(){\n            d3.csv('data/flights-aggregation.csv').then((response) => this.fetchData(response));\n        }\n    }\n</script>\n\n<style>\n    th, td {\n        border: 1px solid black;\n    }\n\n    table {\n        font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n        border-collapse: collapse;\n        width: 100%;\n    }\n\n    table td, table th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n    table tr:nth-child(even){background-color: #f2f2f2;}\n\n    table tr:hover {background-color: #ddd;}\n\n    table th {\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: left;\n        background-color: #4CAF50;\n        color: white;\n    }\n\n    #svgContainer{\n        margin-top: 100px;\n    }\n    #suggestion-bar-chart{\n        margin: auto;\n        margin-top: 50px;\n    }\n\n    .bar--positive {\n        fill: steelblue;\n    }\n\n    .bar--negative {\n        fill: darkorange;\n    }\n\n    .axis text {\n        font: 10px sans-serif;\n    }\n\n    .axis path,\n    .axis line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n</style>"]}]}