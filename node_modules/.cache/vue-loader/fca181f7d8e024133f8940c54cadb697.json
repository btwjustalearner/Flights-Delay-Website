{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue","mtime":1575359294000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFjOmhvdmVyewogICAgb3BhY2l0eToxOwp9Cg=="},{"version":3,"sources":["BarChart.vue"],"names":[],"mappingsogBA;AACA;AACA","file":"BarChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"barchart\">\n        <h3>Median Delay By Airport Barchart (Top 8)</h3>\n        <svg id=\"chart\" height=600 width=1200></svg>\n        <h3>Median Delay By Carrier Barchart</h3>\n        <svg id='carrir' height=600 width=1200></svg>\n        <h3>Delay Rate By Carrier And Day of Week Bubble Chart</h3>\n        <center>\n        <svg id='bubble' width=\"932\" height=\"932\"></svg>\n        </center>\n        <ul style=\"list-style-type:none;\">\n            <li>Weekends are good days to travel</li>\n            <li>Avoid Mondays</li>\n            <li>While, you get what you pay for</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import * as d3 from 'd3';\n    export default {\n        name: \"BarChart\",\n        mounted(){\n\n        //     function removeZeroValue(arr){\n        //         var newArr=[];\n        //         arr.forEach(\n        //             function(e){\n        //                 if (e['ARR_DELAY']>0){\n        //                     newArr.push(e)\n        //                 }\n        //             }\n        //         );\n        //         return newArr;\n        //     }\n        //     function groupBy( array , f ) {\n        //         let groups = {};\n        //         array.forEach( function( o ) {\n        //             let group = JSON.stringify( f(o) );\n        //             groups[group] = groups[group] || [];\n        //             groups[group].push( o );\n        //         });\n        //         return Object.keys(groups).map( function( group ) {\n        //             return groups[group];\n        //         });\n        //     }\n        //     d3.csv('./data/Flights.csv',function(d){\n        //         return {\n        //             DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n        //             ARR_DELAY:+d.ARR_DELAY\n        //         };\n        //     }).then(\n        //         function(data){\n        //             var dataProcessed=removeZeroValue(data);\n        //             var sorted = groupBy(dataProcessed, function(item){\n        //                 return [item.DEST_AIRPORT_ID];\n        //             });\n        //             var count=0.0;\n        //             var dataGroup=new Array()\n        //             var dic=new Array()\n        //             sorted.forEach(\n        //                 function(e){\n        //                     count=0\n        //                     e.forEach(\n        //                         function(m){\n        //                             count=count+m['ARR_DELAY'];\n        //                         }\n        //                     )\n        //                     dic=[]\n        //                     dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n        //                     dic['Count']=count\n        //                     dataGroup.push(dic)\n        //                 }\n        //             )\n        //\n        //\n        //\n        //\n        //\n        //             var xScale = d3.scaleBand()\n        //                 .round(true)\n        //                 .paddingInner(0.05);\n        //\n        //             xScale.domain(dataGroup.map(function (d) {\n        //                 return d.DEST_AIRPORT_ID;\n        //             }))\n        //                 .range([0, 1500]);\n        //             var height=700;\n        //             var yScale = d3.scaleLinear();\n        //             var maxnum=0\n        //             var minnum=10000000\n        //             for (var i=0;i<dataGroup.length;i++){\n        //                 if (dataGroup[i]['Count']>maxnum){\n        //                     maxnum=dataGroup[i]['Count']\n        //                 }\n        //                 if (dataGroup[i]['Count']<minnum){\n        //                     minnum=dataGroup[i]['Count']\n        //                 }\n        //             }\n        //\n        //             yScale.domain([minnum,maxnum])\n        //                 .range([100,height]);\n        //             dataGroup.forEach(function(e){\n        //                 console.log(yScale(e.Count))\n        //             })\n        //\n        //\n        //\n        //\n        //\n        //             var yAxis = d3.axisLeft()\n        //                 .scale(yScale);\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'y axis')\n        //                 .attr('transform', 'translate(70,' +50  + ')')\n        //                 .call(yAxis);\n        //\n        //\n        //             var xAxis = d3.axisBottom()\n        //                 .scale(xScale);\n        //\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'x axis')\n        //                 .attr('transform', 'translate(0,' +height  + ')')\n        //                 .call(xAxis);\n        //\n        //             d3.select(\"#chart\")\n        //                 .selectAll(\"div\")\n        //                 .data(dataGroup)\n        //                 .enter()\n        //                 .append('rect')\n        //                 .attr('class','rect')\n        //                 .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)})\n        //                 .attr('y',function(d){return height-yScale(d.Count)})\n        //                 .attr('height',function(d){return yScale(d.Count)})\n        //                 .attr('width',5)\n        //                 .style(\"fill\",\"lightpink\");\n        //\n        //\n        //             d3.select(\"#chart\").selectAll('div')\n        //                 .data(dataGroup, function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .enter()\n        //                 .append('text')\n        //                 .text(function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .attr('class', 'ac')\n        //                 .attr('x', function (d) {\n        //                     return xScale(d.DEST_AIRPORT_ID) + xScale.bandwidth() / 2-10;\n        //                 })\n        //                 .attr('y',  function(d){return height-yScale(d.Count)}\n        //                 )\n        //                 .attr('opacity','0')\n        //\n        //         }\n        //     )\n            function removeZeroValue(arr){\n                var newArr=[];\n                arr.forEach(\n                    function(e){\n                        if (Math.abs(e['ARR_DELAY'])>0){\n                            newArr.push(e)\n                        }\n                    }\n                );\n                return newArr;\n            }\n            function groupBy( array , f ) {\n                let groups = {};\n                array.forEach( function( o ) {\n                    let group = JSON.stringify( f(o) );\n                    groups[group] = groups[group] || [];\n                    groups[group].push( o );\n                });\n                return Object.keys(groups).map( function( group ) {\n                    return groups[group];\n                });\n            }\n            function maxarr(arr,len){\n                var max=[];\n                arr.sort(function(a,b){\n                    return a['Count']-b['Count']\n                })\n                for (var i=0;i<len;i++){\n                    max.push(arr.pop())\n                }\n                return max.reverse()\n            }\n            d3.csv('data/flights_iata.csv',function(d){\n                return {\n                    DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n                    ARR_DELAY:+d.ARR_DELAY,\n                    Origin:d.Description_origin,\n                    Dest:d.Description_dest,\n                    Carrir:d.OP_UNIQUE_CARRIER\n                };\n            }).then(\n                function(data){\n\n                    var dataProcessed=removeZeroValue(data);\n                    // debugger;\n                    var sorted = groupBy(dataProcessed, function(item){\n                        return [item.DEST_AIRPORT_ID];\n                    });\n                    var count=0.0;\n                    var num=0.0;\n                    var dataGroup=new Array()\n                    var dic=new Array()\n                    sorted.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n                            dic['Count']=count/num\n                            var list=[]\n                            list=e[0]['Dest'].split(\",\")\n                            dic['DEST_DESCRIPTION']=list\n                            // debugger;\n                            dataGroup.push(dic)\n                        }\n                    )\n\n                    var topN=10;\n\n                    dataGroup=maxarr(dataGroup,topN);\n                    // debugger;\n                    var xScale = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    // debugger;\n                    xScale.domain(dataGroup.map(function (d) {\n                        // debugger;\n                        return d.DEST_AIRPORT_ID;\n                    }))\n                        .range([70, 1470]);\n                    var height=500;\n                    var yScale = d3.scaleLinear();\n                    var maxnum=0\n                    var minnum=10000000\n                    for (var i=0;i<dataGroup.length;i++){\n                        if (dataGroup[i]['Count']>maxnum){\n                            maxnum=dataGroup[i]['Count']\n                        }\n                        if (dataGroup[i]['Count']<minnum){\n                            minnum=dataGroup[i]['Count']\n                        }\n                    }\n\n                    yScale.domain([minnum,maxnum])\n                        .range([100,height]);\n\n\n\n\n\n\n                    var yAxis = d3.axisLeft()\n                        .scale(yScale);\n                    d3.select(\"#chart\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis);\n\n\n                    var xAxis = d3.axisBottom()\n                        .scale(xScale);\n\n                    d3.select(\"#chart\").append('g')\n                        .attr('class', 'x axis')\n                        .attr('transform', 'translate(0,' +height  + ')')\n                        .call(xAxis.tickSize(0));\n\n                    d3.select(\"#chart\")\n                        .selectAll(\"div\")\n                        .data(dataGroup)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)+300/(1.5*topN)})\n                        .attr('y',function(d){return height-yScale(d.Count)})\n                        .attr('height',function(d){return yScale(d.Count)})\n                        .attr('width',1400/(1.5*topN))\n                        .style(\"fill\",\"lightpink\");\n\n\n                    d3.select(\"#chart\").selectAll('div')\n                        .data(dataGroup, function (d) {\n                            return d.DEST_AIRPORT_ID;\n                        })\n                        .enter()\n                        .append('text')\n                        .text(function (d) {\n                            return d.DEST_DESCRIPTION[0];\n                        })\n                        .attr('class', 'ac')\n                        .attr('x', function (d) {\n                            return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[0].length/2-30;\n                        })\n                        .attr('y',  function(d){return height-yScale(d.Count)-20}\n                        )\n                        .attr('opacity','0')\n\n\n                    // d3.select(\"#chart\").selectAll('div')\n                    //     .data(dataGroup, function (d) {\n                    //         return d.DEST_AIRPORT_ID;\n                    //     })\n                    //     .enter()\n                    //     .append('text')\n                    //     .text(function (d) {\n                    //         return d.DEST_DESCRIPTION[1];\n                    //     })\n                    //     .attr('class', 'ac')\n                    //     .attr('x', function (d) {\n                    //         return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[1].length/2-70;\n                    //     })\n                    //     .attr('y',  function(d){return height-yScale(d.Count)}\n                    //     )\n                    //     .attr('opacity','0.5')\n                    //     .attr('font-size','13')\n\n\n\n\n\n                    var sorted_carrir = groupBy(dataProcessed, function(item){\n                        return [item.Carrir];\n                     });\n                    //var count=0.0;\n                    //var num=0.0;\n                    var dataGroup_carrir=new Array()\n                    dic=[]\n                    //var dic=new Array()\n                    sorted_carrir.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['Carrir']=e[0]['Carrir']\n                            dic['Count']=count/num\n                            dataGroup_carrir.push(dic)\n                        }\n                    )\n\n\n\n                    var xScale_carrir = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    xScale_carrir.domain(dataGroup_carrir.map(function (d) {\n                        return d.Carrir;\n                    }))\n                        .range([70, 1470]);\n                    height=500;\n                    var yScale_carrir = d3.scaleLinear();\n                    maxnum=0\n                    minnum=10000000\n                    for (i=0;i<dataGroup_carrir.length;i++){\n                        if (dataGroup_carrir[i]['Count']>maxnum){\n                            maxnum=dataGroup_carrir[i]['Count']\n                        }\n                        if (dataGroup_carrir[i]['Count']<minnum){\n                            minnum=dataGroup_carrir[i]['Count']\n                        }\n                    }\n\n                    yScale_carrir.domain([minnum,maxnum])\n                        .range([100,height]);\n\n\n\n\n\n\n                    var yAxis_carrir = d3.axisLeft()\n                        .scale(yScale_carrir);\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis_carrir);\n\n\n                    var xAxis_carrir = d3.axisBottom()\n                        .scale(xScale_carrir);\n\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'x axis')\n                        .attr('transform', 'translate(0,' +height  + ')')\n                        .call(xAxis_carrir.tickSize(0));\n\n                    d3.select(\"#carrir\")\n                        .selectAll(\"div\")\n                        .data(dataGroup_carrir)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale_carrir(d.Carrir)+10})\n                        .attr('y',function(d){return height-yScale_carrir(d.Count)})\n                        .attr('height',function(d){return yScale_carrir(d.Count)})\n                        .attr('width',80)\n                        .style(\"fill\",\"lightblue\");\n                }\n            )\n\n            d3.json(\"data/bubble.json\") \n    .then(function (data) { \n        //insert chart code here ...\n        var color, width, height, pack;\n\n        color = d3.scaleLinear()\n    .domain([0, 3])\n    .range([\"hsl(332,80%,85%)\", \"hsl(326,67%,14%)\"])\n    .interpolate(d3.interpolateHcl)\n\n    //format = d3.format(\",d\")\n\n    width = 932\n\n    height = width\n\n    pack = data => d3.pack()\n    .size([width, height])\n    .padding(3)(d3.hierarchy(data).sum(d => d.value)\n    .sort((a, b) => b.value - a.value))\n\n    const root = pack(data);\n  let focus = root;\n  let view;\n\n  const svg = d3.select('#bubble')\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n      .style(\"display\", \"block\")\n      .style(\"margin\", \"0 -14px\")\n      .style(\"background\", color(0))\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", () => zoom(root));\n\n  const node = svg.append(\"g\")\n    .selectAll(\"circle\")\n    .data(root.descendants().slice(1))\n    .join(\"circle\")\n      .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n      .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n      .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n      .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n      .on(\"click\", d => focus !== d && (zoom(d), d3.event.stopPropagation()));\n\n  const label = svg.append(\"g\")\n      .style(\"font\", \"10px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n    .selectAll(\"text\")\n    .data(root.descendants())\n    .join(\"text\")\n      .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n      .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n      .text(d => d.data.name);\n\n  zoomTo([root.x, root.y, root.r * 2]);\n\n  function zoomTo(v) {\n    const k = width / v[2];\n\n    view = v;\n\n    label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"r\", d => d.r * k);\n  }\n\n  function zoom(d) {\n    //const focus0 = focus;\n\n    focus = d;\n\n    const transition = svg.transition()\n        .duration(d3.event.altKey ? 7500 : 750)\n        .tween(\"zoom\", _d => {\n          const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n          return t => zoomTo(i(t));\n        });\n\n    label\n      .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n      .transition(transition)\n        .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n        .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n        .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n  }\n});\n\n\n\n\n        }\n    }\n</script>\n\n<style>\n    .ac:hover{\n        opacity:1;\n    }\n</style>"]}]}