{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/BarChart.vue","mtime":1575425846000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgICBpbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgbmFtZTogIkJhckNoYXJ0IiwKICAgICAgICBtb3VudGVkKCl7CgogICAgICAgIC8vICAgICBmdW5jdGlvbiByZW1vdmVaZXJvVmFsdWUoYXJyKXsKICAgICAgICAvLyAgICAgICAgIHZhciBuZXdBcnI9W107CiAgICAgICAgLy8gICAgICAgICBhcnIuZm9yRWFjaCgKICAgICAgICAvLyAgICAgICAgICAgICBmdW5jdGlvbihlKXsKICAgICAgICAvLyAgICAgICAgICAgICAgICAgaWYgKGVbJ0FSUl9ERUxBWSddPjApewogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgbmV3QXJyLnB1c2goZSkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgfQogICAgICAgIC8vICAgICAgICAgICAgIH0KICAgICAgICAvLyAgICAgICAgICk7CiAgICAgICAgLy8gICAgICAgICByZXR1cm4gbmV3QXJyOwogICAgICAgIC8vICAgICB9CiAgICAgICAgLy8gICAgIGZ1bmN0aW9uIGdyb3VwQnkoIGFycmF5ICwgZiApIHsKICAgICAgICAvLyAgICAgICAgIGxldCBncm91cHMgPSB7fTsKICAgICAgICAvLyAgICAgICAgIGFycmF5LmZvckVhY2goIGZ1bmN0aW9uKCBvICkgewogICAgICAgIC8vICAgICAgICAgICAgIGxldCBncm91cCA9IEpTT04uc3RyaW5naWZ5KCBmKG8pICk7CiAgICAgICAgLy8gICAgICAgICAgICAgZ3JvdXBzW2dyb3VwXSA9IGdyb3Vwc1tncm91cF0gfHwgW107CiAgICAgICAgLy8gICAgICAgICAgICAgZ3JvdXBzW2dyb3VwXS5wdXNoKCBvICk7CiAgICAgICAgLy8gICAgICAgICB9KTsKICAgICAgICAvLyAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhncm91cHMpLm1hcCggZnVuY3Rpb24oIGdyb3VwICkgewogICAgICAgIC8vICAgICAgICAgICAgIHJldHVybiBncm91cHNbZ3JvdXBdOwogICAgICAgIC8vICAgICAgICAgfSk7CiAgICAgICAgLy8gICAgIH0KICAgICAgICAvLyAgICAgZDMuY3N2KCcuL2RhdGEvRmxpZ2h0cy5jc3YnLGZ1bmN0aW9uKGQpewogICAgICAgIC8vICAgICAgICAgcmV0dXJuIHsKICAgICAgICAvLyAgICAgICAgICAgICBERVNUX0FJUlBPUlRfSUQ6K2QuREVTVF9BSVJQT1JUX0lELAogICAgICAgIC8vICAgICAgICAgICAgIEFSUl9ERUxBWTorZC5BUlJfREVMQVkKICAgICAgICAvLyAgICAgICAgIH07CiAgICAgICAgLy8gICAgIH0pLnRoZW4oCiAgICAgICAgLy8gICAgICAgICBmdW5jdGlvbihkYXRhKXsKICAgICAgICAvLyAgICAgICAgICAgICB2YXIgZGF0YVByb2Nlc3NlZD1yZW1vdmVaZXJvVmFsdWUoZGF0YSk7CiAgICAgICAgLy8gICAgICAgICAgICAgdmFyIHNvcnRlZCA9IGdyb3VwQnkoZGF0YVByb2Nlc3NlZCwgZnVuY3Rpb24oaXRlbSl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgIHJldHVybiBbaXRlbS5ERVNUX0FJUlBPUlRfSURdOwogICAgICAgIC8vICAgICAgICAgICAgIH0pOwogICAgICAgIC8vICAgICAgICAgICAgIHZhciBjb3VudD0wLjA7CiAgICAgICAgLy8gICAgICAgICAgICAgdmFyIGRhdGFHcm91cD1uZXcgQXJyYXkoKQogICAgICAgIC8vICAgICAgICAgICAgIHZhciBkaWM9bmV3IEFycmF5KCkKICAgICAgICAvLyAgICAgICAgICAgICBzb3J0ZWQuZm9yRWFjaCgKICAgICAgICAvLyAgICAgICAgICAgICAgICAgZnVuY3Rpb24oZSl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBjb3VudD0wCiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBlLmZvckVhY2goCiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24obSl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50PWNvdW50K21bJ0FSUl9ERUxBWSddOwogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIGRpYz1bXQogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgZGljWydERVNUX0FJUlBPUlRfSUQnXT1lWzBdWydERVNUX0FJUlBPUlRfSUQnXQogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgZGljWydDb3VudCddPWNvdW50CiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBkYXRhR3JvdXAucHVzaChkaWMpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIH0KICAgICAgICAvLyAgICAgICAgICAgICApCiAgICAgICAgLy8KICAgICAgICAvLwogICAgICAgIC8vCiAgICAgICAgLy8KICAgICAgICAvLwogICAgICAgIC8vICAgICAgICAgICAgIHZhciB4U2NhbGUgPSBkMy5zY2FsZUJhbmQoKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAucm91bmQodHJ1ZSkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLnBhZGRpbmdJbm5lcigwLjA1KTsKICAgICAgICAvLwogICAgICAgIC8vICAgICAgICAgICAgIHhTY2FsZS5kb21haW4oZGF0YUdyb3VwLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgIC8vICAgICAgICAgICAgICAgICByZXR1cm4gZC5ERVNUX0FJUlBPUlRfSUQ7CiAgICAgICAgLy8gICAgICAgICAgICAgfSkpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5yYW5nZShbMCwgMTUwMF0pOwogICAgICAgIC8vICAgICAgICAgICAgIHZhciBoZWlnaHQ9NzAwOwogICAgICAgIC8vICAgICAgICAgICAgIHZhciB5U2NhbGUgPSBkMy5zY2FsZUxpbmVhcigpOwogICAgICAgIC8vICAgICAgICAgICAgIHZhciBtYXhudW09MAogICAgICAgIC8vICAgICAgICAgICAgIHZhciBtaW5udW09MTAwMDAwMDAKICAgICAgICAvLyAgICAgICAgICAgICBmb3IgKHZhciBpPTA7aTxkYXRhR3JvdXAubGVuZ3RoO2krKyl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgIGlmIChkYXRhR3JvdXBbaV1bJ0NvdW50J10+bWF4bnVtKXsKICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIG1heG51bT1kYXRhR3JvdXBbaV1bJ0NvdW50J10KICAgICAgICAvLyAgICAgICAgICAgICAgICAgfQogICAgICAgIC8vICAgICAgICAgICAgICAgICBpZiAoZGF0YUdyb3VwW2ldWydDb3VudCddPG1pbm51bSl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBtaW5udW09ZGF0YUdyb3VwW2ldWydDb3VudCddCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIH0KICAgICAgICAvLyAgICAgICAgICAgICB9CiAgICAgICAgLy8KICAgICAgICAvLyAgICAgICAgICAgICB5U2NhbGUuZG9tYWluKFttaW5udW0sbWF4bnVtXSkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLnJhbmdlKFsxMDAsaGVpZ2h0XSk7CiAgICAgICAgLy8gICAgICAgICAgICAgZGF0YUdyb3VwLmZvckVhY2goZnVuY3Rpb24oZSl7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHlTY2FsZShlLkNvdW50KSkKICAgICAgICAvLyAgICAgICAgICAgICB9KQogICAgICAgIC8vCiAgICAgICAgLy8KICAgICAgICAvLwogICAgICAgIC8vCiAgICAgICAgLy8KICAgICAgICAvLyAgICAgICAgICAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCgpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5zY2FsZSh5U2NhbGUpOwogICAgICAgIC8vICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NoYXJ0IikuYXBwZW5kKCdnJykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3kgYXhpcycpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDcwLCcgKzUwICArICcpJykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmNhbGwoeUF4aXMpOwogICAgICAgIC8vCiAgICAgICAgLy8KICAgICAgICAvLyAgICAgICAgICAgICB2YXIgeEF4aXMgPSBkMy5heGlzQm90dG9tKCkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLnNjYWxlKHhTY2FsZSk7CiAgICAgICAgLy8KICAgICAgICAvLyAgICAgICAgICAgICBkMy5zZWxlY3QoIiNjaGFydCIpLmFwcGVuZCgnZycpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICd4IGF4aXMnKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgK2hlaWdodCAgKyAnKScpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5jYWxsKHhBeGlzKTsKICAgICAgICAvLwogICAgICAgIC8vICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NoYXJ0IikKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLnNlbGVjdEFsbCgiZGl2IikKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmRhdGEoZGF0YUdyb3VwKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuZW50ZXIoKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXBwZW5kKCdyZWN0JykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywncmVjdCcpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5hdHRyKCd4JyxmdW5jdGlvbihkKXtyZXR1cm4geFNjYWxlKGQuREVTVF9BSVJQT1JUX0lEKX0pCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5hdHRyKCd5JyxmdW5jdGlvbihkKXtyZXR1cm4gaGVpZ2h0LXlTY2FsZShkLkNvdW50KX0pCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLGZ1bmN0aW9uKGQpe3JldHVybiB5U2NhbGUoZC5Db3VudCl9KQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXR0cignd2lkdGgnLDUpCiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsImxpZ2h0cGluayIpOwogICAgICAgIC8vCiAgICAgICAgLy8KICAgICAgICAvLyAgICAgICAgICAgICBkMy5zZWxlY3QoIiNjaGFydCIpLnNlbGVjdEFsbCgnZGl2JykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmRhdGEoZGF0YUdyb3VwLCBmdW5jdGlvbiAoZCkgewogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQuREVTVF9BSVJQT1JUX0lEOwogICAgICAgIC8vICAgICAgICAgICAgICAgICB9KQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuZW50ZXIoKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXBwZW5kKCd0ZXh0JykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLkRFU1RfQUlSUE9SVF9JRDsKICAgICAgICAvLyAgICAgICAgICAgICAgICAgfSkKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ2FjJykKICAgICAgICAvLyAgICAgICAgICAgICAgICAgLmF0dHIoJ3gnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHhTY2FsZShkLkRFU1RfQUlSUE9SVF9JRCkgKyB4U2NhbGUuYmFuZHdpZHRoKCkgLyAyLTEwOwogICAgICAgIC8vICAgICAgICAgICAgICAgICB9KQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXR0cigneScsICBmdW5jdGlvbihkKXtyZXR1cm4gaGVpZ2h0LXlTY2FsZShkLkNvdW50KX0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgKQogICAgICAgIC8vICAgICAgICAgICAgICAgICAuYXR0cignb3BhY2l0eScsJzAnKQogICAgICAgIC8vCiAgICAgICAgLy8gICAgICAgICB9CiAgICAgICAgLy8gICAgICkKICAgICAgICAgICAgZnVuY3Rpb24gcmVtb3ZlWmVyb1ZhbHVlKGFycil7CiAgICAgICAgICAgICAgICB2YXIgbmV3QXJyPVtdOwogICAgICAgICAgICAgICAgYXJyLmZvckVhY2goCiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oZSl7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhlWydBUlJfREVMQVknXSk+MCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdBcnIucHVzaChlKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIHJldHVybiBuZXdBcnI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZnVuY3Rpb24gZ3JvdXBCeSggYXJyYXkgLCBmICkgewogICAgICAgICAgICAgICAgbGV0IGdyb3VwcyA9IHt9OwogICAgICAgICAgICAgICAgYXJyYXkuZm9yRWFjaCggZnVuY3Rpb24oIG8gKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGdyb3VwID0gSlNPTi5zdHJpbmdpZnkoIGYobykgKTsKICAgICAgICAgICAgICAgICAgICBncm91cHNbZ3JvdXBdID0gZ3JvdXBzW2dyb3VwXSB8fCBbXTsKICAgICAgICAgICAgICAgICAgICBncm91cHNbZ3JvdXBdLnB1c2goIG8gKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGdyb3VwcykubWFwKCBmdW5jdGlvbiggZ3JvdXAgKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdyb3Vwc1tncm91cF07CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBmdW5jdGlvbiBtYXhhcnIoYXJyLGxlbil7CiAgICAgICAgICAgICAgICB2YXIgbWF4PVtdOwogICAgICAgICAgICAgICAgYXJyLnNvcnQoZnVuY3Rpb24oYSxiKXsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYVsnQ291bnQnXS1iWydDb3VudCddCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgZm9yICh2YXIgaT0wO2k8bGVuO2krKyl7CiAgICAgICAgICAgICAgICAgICAgbWF4LnB1c2goYXJyLnBvcCgpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG1heC5yZXZlcnNlKCkKICAgICAgICAgICAgfQogICAgICAgICAgICBkMy5jc3YoJ2RhdGEvZmxpZ2h0c19pYXRhLmNzdicsZnVuY3Rpb24oZCl7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIERFU1RfQUlSUE9SVF9JRDorZC5ERVNUX0FJUlBPUlRfSUQsCiAgICAgICAgICAgICAgICAgICAgQVJSX0RFTEFZOitkLkFSUl9ERUxBWSwKICAgICAgICAgICAgICAgICAgICBPcmlnaW46ZC5EZXNjcmlwdGlvbl9vcmlnaW4sCiAgICAgICAgICAgICAgICAgICAgRGVzdDpkLkRlc2NyaXB0aW9uX2Rlc3QsCiAgICAgICAgICAgICAgICAgICAgQ2FycmlyOmQuT1BfVU5JUVVFX0NBUlJJRVIKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0pLnRoZW4oCiAgICAgICAgICAgICAgICBmdW5jdGlvbihkYXRhKXsKCiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFQcm9jZXNzZWQ9cmVtb3ZlWmVyb1ZhbHVlKGRhdGEpOwogICAgICAgICAgICAgICAgICAgIC8vIGRlYnVnZ2VyOwogICAgICAgICAgICAgICAgICAgIHZhciBzb3J0ZWQgPSBncm91cEJ5KGRhdGFQcm9jZXNzZWQsIGZ1bmN0aW9uKGl0ZW0pewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2l0ZW0uREVTVF9BSVJQT1JUX0lEXTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB2YXIgY291bnQ9MC4wOwogICAgICAgICAgICAgICAgICAgIHZhciBudW09MC4wOwogICAgICAgICAgICAgICAgICAgIHZhciBkYXRhR3JvdXA9bmV3IEFycmF5KCkKICAgICAgICAgICAgICAgICAgICB2YXIgZGljPW5ldyBBcnJheSgpCiAgICAgICAgICAgICAgICAgICAgc29ydGVkLmZvckVhY2goCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGUpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ9MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtPTAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuZm9yRWFjaCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbihtKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ9Y291bnQrbVsnQVJSX0RFTEFZJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bT1udW0rMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWM9W10KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpY1snREVTVF9BSVJQT1JUX0lEJ109ZVswXVsnREVTVF9BSVJQT1JUX0lEJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpY1snQ291bnQnXT1jb3VudC9udW0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsaXN0PVtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0PWVbMF1bJ0Rlc3QnXS5zcGxpdCgiLCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWNbJ0RFU1RfREVTQ1JJUFRJT04nXT1saXN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBkZWJ1Z2dlcjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFHcm91cC5wdXNoKGRpYykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICAgICAgdmFyIHRvcE49MTA7CgogICAgICAgICAgICAgICAgICAgIGRhdGFHcm91cD1tYXhhcnIoZGF0YUdyb3VwLHRvcE4pOwogICAgICAgICAgICAgICAgICAgIC8vIGRlYnVnZ2VyOwogICAgICAgICAgICAgICAgICAgIHZhciB4U2NhbGUgPSBkMy5zY2FsZUJhbmQoKQogICAgICAgICAgICAgICAgICAgICAgICAucm91bmQodHJ1ZSkKICAgICAgICAgICAgICAgICAgICAgICAgLnBhZGRpbmdJbm5lcigwLjA1KTsKCiAgICAgICAgICAgICAgICAgICAgLy8gZGVidWdnZXI7CiAgICAgICAgICAgICAgICAgICAgeFNjYWxlLmRvbWFpbihkYXRhR3JvdXAubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRlYnVnZ2VyOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5ERVNUX0FJUlBPUlRfSUQ7CiAgICAgICAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgICAgICAgICAgICAgIC5yYW5nZShbNzAsIDE0NzBdKTsKICAgICAgICAgICAgICAgICAgICB2YXIgaGVpZ2h0PTUwMDsKICAgICAgICAgICAgICAgICAgICB2YXIgeVNjYWxlID0gZDMuc2NhbGVMaW5lYXIoKTsKICAgICAgICAgICAgICAgICAgICB2YXIgbWF4bnVtPTAKICAgICAgICAgICAgICAgICAgICB2YXIgbWlubnVtPTEwMDAwMDAwCiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaT0wO2k8ZGF0YUdyb3VwLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUdyb3VwW2ldWydDb3VudCddPm1heG51bSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhudW09ZGF0YUdyb3VwW2ldWydDb3VudCddCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFHcm91cFtpXVsnQ291bnQnXTxtaW5udW0pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWlubnVtPWRhdGFHcm91cFtpXVsnQ291bnQnXQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICB5U2NhbGUuZG9tYWluKFttYXhudW0sbWlubnVtLzJdKQogICAgICAgICAgICAgICAgICAgICAgICAucmFuZ2UoWzEwMCxoZWlnaHRdKTsKCgoKCgoKICAgICAgICAgICAgICAgICAgICB2YXIgeUF4aXMgPSBkMy5heGlzTGVmdCgpCiAgICAgICAgICAgICAgICAgICAgICAgIC5zY2FsZSh5U2NhbGUpOwogICAgICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NoYXJ0IikuYXBwZW5kKCdnJykKICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3kgYXhpcycpCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDcwLCcgKzAgICsgJyknKQogICAgICAgICAgICAgICAgICAgICAgICAuY2FsbCh5QXhpcyk7CiAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NoYXJ0IikuYXBwZW5kKCdnJykuY2FsbCgKICAgICAgICAgICAgICAgICAgICAgICAgZDMuYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tWYWx1ZXMoW10pCiAgICAgICAgICAgICAgICAgICAgKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsNTAwKScpCgoKICAgICAgICAgICAgICAgICAgICBkMy5zZWxlY3QoIiNjaGFydCIpLmFwcGVuZCgidGV4dCIpLnRleHQoIkNpdHkgTmFtZSIpLmF0dHIoIngiLDYwMCkuYXR0cigieSIsNTMwKQoKCgogICAgICAgICAgICAgICAgICAgIC8vdmFyIHhBeGlzID0gZDMuYXhpc0JvdHRvbSgpCiAgICAgICAgICAgICAgICAgICAgICAgLy8gLnNjYWxlKHhTY2FsZS4pOwoKICAgICAgICAgICAgICAgICAgICAvL2QzLnNlbGVjdCgiI2NoYXJ0IikuYXBwZW5kKCdnJykKICAgICAgICAgICAgICAgICAgICAgIC8vICAuYXR0cignY2xhc3MnLCAneCBheGlzJykKICAgICAgICAgICAgICAgICAgICAgICAgLy8uYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgK2hlaWdodCAgKyAnKScpCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLmNhbGwoeEF4aXMudGlja1NpemUoMCkpOwoKICAgICAgICAgICAgICAgICAgICBkMy5zZWxlY3QoIiNjaGFydCIpCiAgICAgICAgICAgICAgICAgICAgICAgIC5zZWxlY3RBbGwoImRpdiIpCiAgICAgICAgICAgICAgICAgICAgICAgIC5kYXRhKGRhdGFHcm91cCkKICAgICAgICAgICAgICAgICAgICAgICAgLmVudGVyKCkKICAgICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgncmVjdCcpCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsJ3JlY3QnKQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigneCcsZnVuY3Rpb24oZCl7cmV0dXJuIHhTY2FsZShkLkRFU1RfQUlSUE9SVF9JRCkrMzAwLygxLjUqdG9wTil9KQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigneScsZnVuY3Rpb24oZCl7cmV0dXJuIHlTY2FsZShkLkNvdW50KX0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLGZ1bmN0aW9uKGQpe3JldHVybiBoZWlnaHQteVNjYWxlKGQuQ291bnQpfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3dpZHRoJywxNDAwLygxLjUqdG9wTikpCiAgICAgICAgICAgICAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsImxpZ2h0cGluayIpOwoKCiAgICAgICAgICAgICAgICAgICAgZDMuc2VsZWN0KCIjY2hhcnQiKS5zZWxlY3RBbGwoJ2RpdicpCiAgICAgICAgICAgICAgICAgICAgICAgIC5kYXRhKGRhdGFHcm91cCwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLkRFU1RfQUlSUE9SVF9JRDsKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmVudGVyKCkKICAgICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgndGV4dCcpCiAgICAgICAgICAgICAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5ERVNUX0RFU0NSSVBUSU9OWzBdOwogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignY2xhc3MnLCAnYWMnKQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigneCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geFNjYWxlKGQuREVTVF9BSVJQT1JUX0lEKSsxMDAwLygxLjUqdG9wTiktZC5ERVNUX0RFU0NSSVBUSU9OWzBdLmxlbmd0aC8yLTMwOwogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigneScsICBmdW5jdGlvbihkKXtyZXR1cm4geVNjYWxlKGQuQ291bnQpLTIwfQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdvcGFjaXR5JywnMCcpCgoKICAgICAgICAgICAgICAgICAgICAvLyBkMy5zZWxlY3QoIiNjaGFydCIpLnNlbGVjdEFsbCgnZGl2JykKICAgICAgICAgICAgICAgICAgICAvLyAgICAgLmRhdGEoZGF0YUdyb3VwLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgcmV0dXJuIGQuREVTVF9BSVJQT1JUX0lEOwogICAgICAgICAgICAgICAgICAgIC8vICAgICB9KQogICAgICAgICAgICAgICAgICAgIC8vICAgICAuZW50ZXIoKQogICAgICAgICAgICAgICAgICAgIC8vICAgICAuYXBwZW5kKCd0ZXh0JykKICAgICAgICAgICAgICAgICAgICAvLyAgICAgLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHJldHVybiBkLkRFU1RfREVTQ1JJUFRJT05bMV07CiAgICAgICAgICAgICAgICAgICAgLy8gICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC5hdHRyKCdjbGFzcycsICdhYycpCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC5hdHRyKCd4JywgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHJldHVybiB4U2NhbGUoZC5ERVNUX0FJUlBPUlRfSUQpKzEwMDAvKDEuNSp0b3BOKS1kLkRFU1RfREVTQ1JJUFRJT05bMV0ubGVuZ3RoLzItNzA7CiAgICAgICAgICAgICAgICAgICAgLy8gICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC5hdHRyKCd5JywgIGZ1bmN0aW9uKGQpe3JldHVybiBoZWlnaHQteVNjYWxlKGQuQ291bnQpfQogICAgICAgICAgICAgICAgICAgIC8vICAgICApCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC5hdHRyKCdvcGFjaXR5JywnMC41JykKICAgICAgICAgICAgICAgICAgICAvLyAgICAgLmF0dHIoJ2ZvbnQtc2l6ZScsJzEzJykKCgoKCgogICAgICAgICAgICAgICAgICAgIHZhciBzb3J0ZWRfY2FycmlyID0gZ3JvdXBCeShkYXRhUHJvY2Vzc2VkLCBmdW5jdGlvbihpdGVtKXsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtpdGVtLkNhcnJpcl07CiAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIC8vdmFyIGNvdW50PTAuMDsKICAgICAgICAgICAgICAgICAgICAvL3ZhciBudW09MC4wOwogICAgICAgICAgICAgICAgICAgIHZhciBkYXRhR3JvdXBfY2FycmlyPW5ldyBBcnJheSgpCiAgICAgICAgICAgICAgICAgICAgZGljPVtdCiAgICAgICAgICAgICAgICAgICAgLy92YXIgZGljPW5ldyBBcnJheSgpCiAgICAgICAgICAgICAgICAgICAgc29ydGVkX2NhcnJpci5mb3JFYWNoKAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbihlKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50PTAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bT0wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLmZvckVhY2goCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24obSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50PWNvdW50K21bJ0FSUl9ERUxBWSddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW09bnVtKzE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGljPVtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWNbJ0NhcnJpciddPWVbMF1bJ0NhcnJpciddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWNbJ0NvdW50J109Y291bnQvbnVtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhR3JvdXBfY2FycmlyLnB1c2goZGljKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKQoKCgogICAgICAgICAgICAgICAgICAgIHZhciB4U2NhbGVfY2FycmlyID0gZDMuc2NhbGVCYW5kKCkKICAgICAgICAgICAgICAgICAgICAgICAgLnJvdW5kKHRydWUpCiAgICAgICAgICAgICAgICAgICAgICAgIC5wYWRkaW5nSW5uZXIoMC4wNSk7CgogICAgICAgICAgICAgICAgICAgIHhTY2FsZV9jYXJyaXIuZG9tYWluKGRhdGFHcm91cF9jYXJyaXIubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLkNhcnJpcjsKICAgICAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgICAgICAgICAgICAgLnJhbmdlKFs3MCwgMTQ3MF0pOwogICAgICAgICAgICAgICAgICAgIGhlaWdodD01MDA7CiAgICAgICAgICAgICAgICAgICAgdmFyIHlTY2FsZV9jYXJyaXIgPSBkMy5zY2FsZUxpbmVhcigpOwogICAgICAgICAgICAgICAgICAgIG1heG51bT0wCiAgICAgICAgICAgICAgICAgICAgbWlubnVtPTEwMDAwMDAwCiAgICAgICAgICAgICAgICAgICAgZm9yIChpPTA7aTxkYXRhR3JvdXBfY2FycmlyLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUdyb3VwX2NhcnJpcltpXVsnQ291bnQnXT5tYXhudW0pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4bnVtPWRhdGFHcm91cF9jYXJyaXJbaV1bJ0NvdW50J10KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUdyb3VwX2NhcnJpcltpXVsnQ291bnQnXTxtaW5udW0pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWlubnVtPWRhdGFHcm91cF9jYXJyaXJbaV1bJ0NvdW50J10KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgeVNjYWxlX2NhcnJpci5kb21haW4oW21heG51bSxtaW5udW1dKQogICAgICAgICAgICAgICAgICAgICAgICAucmFuZ2UoWzIwMCxoZWlnaHRdKTsKCgoKCgoKICAgICAgICAgICAgICAgICAgICB2YXIgeUF4aXNfY2FycmlyID0gZDMuYXhpc0xlZnQoKQogICAgICAgICAgICAgICAgICAgICAgICAuc2NhbGUoeVNjYWxlX2NhcnJpcik7CiAgICAgICAgICAgICAgICAgICAgZDMuc2VsZWN0KCIjY2FycmlyIikuYXBwZW5kKCdnJykKICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3kgYXhpcycpCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDcwLCcgKzAgICsgJyknKQogICAgICAgICAgICAgICAgICAgICAgICAuY2FsbCh5QXhpc19jYXJyaXIpOwoKCiAgICAgICAgICAgICAgICAgICAgdmFyIHhBeGlzX2NhcnJpciA9IGQzLmF4aXNCb3R0b20oKQogICAgICAgICAgICAgICAgICAgICAgICAuc2NhbGUoeFNjYWxlX2NhcnJpcik7CgogICAgICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NhcnJpciIpLmFwcGVuZCgnZycpCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICd4IGF4aXMnKQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgK2hlaWdodCAgKyAnKScpCiAgICAgICAgICAgICAgICAgICAgICAgIC5jYWxsKHhBeGlzX2NhcnJpci50aWNrU2l6ZSgwKSk7CgogICAgICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgiI2NhcnJpciIpCiAgICAgICAgICAgICAgICAgICAgICAgIC5zZWxlY3RBbGwoImRpdiIpCiAgICAgICAgICAgICAgICAgICAgICAgIC5kYXRhKGRhdGFHcm91cF9jYXJyaXIpCiAgICAgICAgICAgICAgICAgICAgICAgIC5lbnRlcigpCiAgICAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJ3JlY3QnKQogICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignY2xhc3MnLCdyZWN0JykKICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3gnLGZ1bmN0aW9uKGQpe3JldHVybiB4U2NhbGVfY2FycmlyKGQuQ2FycmlyKSsxMH0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCd5JyxmdW5jdGlvbihkKXtyZXR1cm4geVNjYWxlX2NhcnJpcihkLkNvdW50KX0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLGZ1bmN0aW9uKGQpe3JldHVybiBoZWlnaHQteVNjYWxlX2NhcnJpcihkLkNvdW50KX0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCd3aWR0aCcsODApCiAgICAgICAgICAgICAgICAgICAgICAgIC5zdHlsZSgiZmlsbCIsImxpZ2h0Ymx1ZSIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApCgogICAgICAgICAgICBkMy5qc29uKCJkYXRhL2J1YmJsZS5qc29uIikgCiAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkgeyAKICAgICAgICAvL2luc2VydCBjaGFydCBjb2RlIGhlcmUgLi4uCiAgICAgICAgdmFyIGNvbG9yLCB3aWR0aCwgaGVpZ2h0LCBwYWNrOwoKICAgICAgICBjb2xvciA9IGQzLnNjYWxlTGluZWFyKCkKICAgIC5kb21haW4oWzAsIDNdKQogICAgLnJhbmdlKFsiaHNsKDMzMiw4MCUsODUlKSIsICJoc2woMzI2LDY3JSwxNCUpIl0pCiAgICAuaW50ZXJwb2xhdGUoZDMuaW50ZXJwb2xhdGVIY2wpCgogICAgLy9mb3JtYXQgPSBkMy5mb3JtYXQoIixkIikKCiAgICB3aWR0aCA9IDkzMgoKICAgIGhlaWdodCA9IHdpZHRoCgogICAgcGFjayA9IGRhdGEgPT4gZDMucGFjaygpCiAgICAuc2l6ZShbd2lkdGgsIGhlaWdodF0pCiAgICAucGFkZGluZygzKShkMy5oaWVyYXJjaHkoZGF0YSkuc3VtKGQgPT4gZC52YWx1ZSkKICAgIC5zb3J0KChhLCBiKSA9PiBiLnZhbHVlIC0gYS52YWx1ZSkpCgogICAgY29uc3Qgcm9vdCA9IHBhY2soZGF0YSk7CiAgbGV0IGZvY3VzID0gcm9vdDsKICBsZXQgdmlldzsKCiAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjYnViYmxlJykKICAgICAgLmF0dHIoInZpZXdCb3giLCBgLSR7d2lkdGggLyAyfSAtJHtoZWlnaHQgLyAyfSAke3dpZHRofSAke2hlaWdodH1gKQogICAgICAuc3R5bGUoImRpc3BsYXkiLCAiYmxvY2siKQogICAgICAuc3R5bGUoIm1hcmdpbiIsICIwIC0xNHB4IikKICAgICAgLnN0eWxlKCJiYWNrZ3JvdW5kIiwgY29sb3IoMCkpCiAgICAgIC5zdHlsZSgiY3Vyc29yIiwgInBvaW50ZXIiKQogICAgICAub24oImNsaWNrIiwgKCkgPT4gem9vbShyb290KSk7CgogIGNvbnN0IG5vZGUgPSBzdmcuYXBwZW5kKCJnIikKICAgIC5zZWxlY3RBbGwoImNpcmNsZSIpCiAgICAuZGF0YShyb290LmRlc2NlbmRhbnRzKCkuc2xpY2UoMSkpCiAgICAuam9pbigiY2lyY2xlIikKICAgICAgLmF0dHIoImZpbGwiLCBkID0+IGQuY2hpbGRyZW4gPyBjb2xvcihkLmRlcHRoKSA6ICJ3aGl0ZSIpCiAgICAgIC5hdHRyKCJwb2ludGVyLWV2ZW50cyIsIGQgPT4gIWQuY2hpbGRyZW4gPyAibm9uZSIgOiBudWxsKQogICAgICAub24oIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgeyBkMy5zZWxlY3QodGhpcykuYXR0cigic3Ryb2tlIiwgIiMwMDAiKTsgfSkKICAgICAgLm9uKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgeyBkMy5zZWxlY3QodGhpcykuYXR0cigic3Ryb2tlIiwgbnVsbCk7IH0pCiAgICAgIC5vbigiY2xpY2siLCBkID0+IGZvY3VzICE9PSBkICYmICh6b29tKGQpLCBkMy5ldmVudC5zdG9wUHJvcGFnYXRpb24oKSkpOwoKICBjb25zdCBsYWJlbCA9IHN2Zy5hcHBlbmQoImciKQogICAgICAuc3R5bGUoImZvbnQiLCAiMTBweCBzYW5zLXNlcmlmIikKICAgICAgLmF0dHIoInBvaW50ZXItZXZlbnRzIiwgIm5vbmUiKQogICAgICAuYXR0cigidGV4dC1hbmNob3IiLCAibWlkZGxlIikKICAgIC5zZWxlY3RBbGwoInRleHQiKQogICAgLmRhdGEocm9vdC5kZXNjZW5kYW50cygpKQogICAgLmpvaW4oInRleHQiKQogICAgICAuc3R5bGUoImZpbGwtb3BhY2l0eSIsIGQgPT4gZC5wYXJlbnQgPT09IHJvb3QgPyAxIDogMCkKICAgICAgLnN0eWxlKCJkaXNwbGF5IiwgZCA9PiBkLnBhcmVudCA9PT0gcm9vdCA/ICJpbmxpbmUiIDogIm5vbmUiKQogICAgICAudGV4dChkID0+IGQuZGF0YS5uYW1lKTsKCiAgem9vbVRvKFtyb290LngsIHJvb3QueSwgcm9vdC5yICogMl0pOwoKICBmdW5jdGlvbiB6b29tVG8odikgewogICAgY29uc3QgayA9IHdpZHRoIC8gdlsyXTsKCiAgICB2aWV3ID0gdjsKCiAgICBsYWJlbC5hdHRyKCJ0cmFuc2Zvcm0iLCBkID0+IGB0cmFuc2xhdGUoJHsoZC54IC0gdlswXSkgKiBrfSwkeyhkLnkgLSB2WzFdKSAqIGt9KWApOwogICAgbm9kZS5hdHRyKCJ0cmFuc2Zvcm0iLCBkID0+IGB0cmFuc2xhdGUoJHsoZC54IC0gdlswXSkgKiBrfSwkeyhkLnkgLSB2WzFdKSAqIGt9KWApOwogICAgbm9kZS5hdHRyKCJyIiwgZCA9PiBkLnIgKiBrKTsKICB9CgogIGZ1bmN0aW9uIHpvb20oZCkgewogICAgLy9jb25zdCBmb2N1czAgPSBmb2N1czsKCiAgICBmb2N1cyA9IGQ7CgogICAgY29uc3QgdHJhbnNpdGlvbiA9IHN2Zy50cmFuc2l0aW9uKCkKICAgICAgICAuZHVyYXRpb24oZDMuZXZlbnQuYWx0S2V5ID8gNzUwMCA6IDc1MCkKICAgICAgICAudHdlZW4oInpvb20iLCBfZCA9PiB7CiAgICAgICAgICBjb25zdCBpID0gZDMuaW50ZXJwb2xhdGVab29tKHZpZXcsIFtmb2N1cy54LCBmb2N1cy55LCBmb2N1cy5yICogMl0pOwogICAgICAgICAgcmV0dXJuIHQgPT4gem9vbVRvKGkodCkpOwogICAgICAgIH0pOwoKICAgIGxhYmVsCiAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5wYXJlbnQgPT09IGZvY3VzIHx8IHRoaXMuc3R5bGUuZGlzcGxheSA9PT0gImlubGluZSI7IH0pCiAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pCiAgICAgICAgLnN0eWxlKCJmaWxsLW9wYWNpdHkiLCBkID0+IGQucGFyZW50ID09PSBmb2N1cyA/IDEgOiAwKQogICAgICAgIC5vbigic3RhcnQiLCBmdW5jdGlvbihkKSB7IGlmIChkLnBhcmVudCA9PT0gZm9jdXMpIHRoaXMuc3R5bGUuZGlzcGxheSA9ICJpbmxpbmUiOyB9KQogICAgICAgIC5vbigiZW5kIiwgZnVuY3Rpb24oZCkgeyBpZiAoZC5wYXJlbnQgIT09IGZvY3VzKSB0aGlzLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7IH0pOwogIH0KfSk7CgoKCgogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"BarChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"barchart\">\n        <h3>Median Delay By Airport Barchart (Top 8)</h3>\n        <svg id=\"chart\" height=600 width=1200></svg>\n        <h3>Median Delay By Carrier Barchart</h3>\n        <svg id='carrir' height=600 width=1200></svg>\n        <h3>Delay Rate By Carrier And Day of Week Bubble Chart</h3>\n        <center>\n        <svg id='bubble' width=\"932\" height=\"932\"></svg>\n        </center>\n        <ul style=\"list-style-type:none;\">\n            <li>Weekends are good days to travel</li>\n            <li>Avoid Mondays</li>\n            <li>While, you get what you pay for</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import * as d3 from 'd3';\n    export default {\n        name: \"BarChart\",\n        mounted(){\n\n        //     function removeZeroValue(arr){\n        //         var newArr=[];\n        //         arr.forEach(\n        //             function(e){\n        //                 if (e['ARR_DELAY']>0){\n        //                     newArr.push(e)\n        //                 }\n        //             }\n        //         );\n        //         return newArr;\n        //     }\n        //     function groupBy( array , f ) {\n        //         let groups = {};\n        //         array.forEach( function( o ) {\n        //             let group = JSON.stringify( f(o) );\n        //             groups[group] = groups[group] || [];\n        //             groups[group].push( o );\n        //         });\n        //         return Object.keys(groups).map( function( group ) {\n        //             return groups[group];\n        //         });\n        //     }\n        //     d3.csv('./data/Flights.csv',function(d){\n        //         return {\n        //             DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n        //             ARR_DELAY:+d.ARR_DELAY\n        //         };\n        //     }).then(\n        //         function(data){\n        //             var dataProcessed=removeZeroValue(data);\n        //             var sorted = groupBy(dataProcessed, function(item){\n        //                 return [item.DEST_AIRPORT_ID];\n        //             });\n        //             var count=0.0;\n        //             var dataGroup=new Array()\n        //             var dic=new Array()\n        //             sorted.forEach(\n        //                 function(e){\n        //                     count=0\n        //                     e.forEach(\n        //                         function(m){\n        //                             count=count+m['ARR_DELAY'];\n        //                         }\n        //                     )\n        //                     dic=[]\n        //                     dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n        //                     dic['Count']=count\n        //                     dataGroup.push(dic)\n        //                 }\n        //             )\n        //\n        //\n        //\n        //\n        //\n        //             var xScale = d3.scaleBand()\n        //                 .round(true)\n        //                 .paddingInner(0.05);\n        //\n        //             xScale.domain(dataGroup.map(function (d) {\n        //                 return d.DEST_AIRPORT_ID;\n        //             }))\n        //                 .range([0, 1500]);\n        //             var height=700;\n        //             var yScale = d3.scaleLinear();\n        //             var maxnum=0\n        //             var minnum=10000000\n        //             for (var i=0;i<dataGroup.length;i++){\n        //                 if (dataGroup[i]['Count']>maxnum){\n        //                     maxnum=dataGroup[i]['Count']\n        //                 }\n        //                 if (dataGroup[i]['Count']<minnum){\n        //                     minnum=dataGroup[i]['Count']\n        //                 }\n        //             }\n        //\n        //             yScale.domain([minnum,maxnum])\n        //                 .range([100,height]);\n        //             dataGroup.forEach(function(e){\n        //                 console.log(yScale(e.Count))\n        //             })\n        //\n        //\n        //\n        //\n        //\n        //             var yAxis = d3.axisLeft()\n        //                 .scale(yScale);\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'y axis')\n        //                 .attr('transform', 'translate(70,' +50  + ')')\n        //                 .call(yAxis);\n        //\n        //\n        //             var xAxis = d3.axisBottom()\n        //                 .scale(xScale);\n        //\n        //             d3.select(\"#chart\").append('g')\n        //                 .attr('class', 'x axis')\n        //                 .attr('transform', 'translate(0,' +height  + ')')\n        //                 .call(xAxis);\n        //\n        //             d3.select(\"#chart\")\n        //                 .selectAll(\"div\")\n        //                 .data(dataGroup)\n        //                 .enter()\n        //                 .append('rect')\n        //                 .attr('class','rect')\n        //                 .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)})\n        //                 .attr('y',function(d){return height-yScale(d.Count)})\n        //                 .attr('height',function(d){return yScale(d.Count)})\n        //                 .attr('width',5)\n        //                 .style(\"fill\",\"lightpink\");\n        //\n        //\n        //             d3.select(\"#chart\").selectAll('div')\n        //                 .data(dataGroup, function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .enter()\n        //                 .append('text')\n        //                 .text(function (d) {\n        //                     return d.DEST_AIRPORT_ID;\n        //                 })\n        //                 .attr('class', 'ac')\n        //                 .attr('x', function (d) {\n        //                     return xScale(d.DEST_AIRPORT_ID) + xScale.bandwidth() / 2-10;\n        //                 })\n        //                 .attr('y',  function(d){return height-yScale(d.Count)}\n        //                 )\n        //                 .attr('opacity','0')\n        //\n        //         }\n        //     )\n            function removeZeroValue(arr){\n                var newArr=[];\n                arr.forEach(\n                    function(e){\n                        if (Math.abs(e['ARR_DELAY'])>0){\n                            newArr.push(e)\n                        }\n                    }\n                );\n                return newArr;\n            }\n            function groupBy( array , f ) {\n                let groups = {};\n                array.forEach( function( o ) {\n                    let group = JSON.stringify( f(o) );\n                    groups[group] = groups[group] || [];\n                    groups[group].push( o );\n                });\n                return Object.keys(groups).map( function( group ) {\n                    return groups[group];\n                });\n            }\n            function maxarr(arr,len){\n                var max=[];\n                arr.sort(function(a,b){\n                    return a['Count']-b['Count']\n                })\n                for (var i=0;i<len;i++){\n                    max.push(arr.pop())\n                }\n                return max.reverse()\n            }\n            d3.csv('data/flights_iata.csv',function(d){\n                return {\n                    DEST_AIRPORT_ID:+d.DEST_AIRPORT_ID,\n                    ARR_DELAY:+d.ARR_DELAY,\n                    Origin:d.Description_origin,\n                    Dest:d.Description_dest,\n                    Carrir:d.OP_UNIQUE_CARRIER\n                };\n            }).then(\n                function(data){\n\n                    var dataProcessed=removeZeroValue(data);\n                    // debugger;\n                    var sorted = groupBy(dataProcessed, function(item){\n                        return [item.DEST_AIRPORT_ID];\n                    });\n                    var count=0.0;\n                    var num=0.0;\n                    var dataGroup=new Array()\n                    var dic=new Array()\n                    sorted.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['DEST_AIRPORT_ID']=e[0]['DEST_AIRPORT_ID']\n                            dic['Count']=count/num\n                            var list=[]\n                            list=e[0]['Dest'].split(\",\")\n                            dic['DEST_DESCRIPTION']=list\n                            // debugger;\n                            dataGroup.push(dic)\n                        }\n                    )\n\n                    var topN=10;\n\n                    dataGroup=maxarr(dataGroup,topN);\n                    // debugger;\n                    var xScale = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    // debugger;\n                    xScale.domain(dataGroup.map(function (d) {\n                        // debugger;\n                        return d.DEST_AIRPORT_ID;\n                    }))\n                        .range([70, 1470]);\n                    var height=500;\n                    var yScale = d3.scaleLinear();\n                    var maxnum=0\n                    var minnum=10000000\n                    for (var i=0;i<dataGroup.length;i++){\n                        if (dataGroup[i]['Count']>maxnum){\n                            maxnum=dataGroup[i]['Count']\n                        }\n                        if (dataGroup[i]['Count']<minnum){\n                            minnum=dataGroup[i]['Count']\n                        }\n                    }\n\n                    yScale.domain([maxnum,minnum/2])\n                        .range([100,height]);\n\n\n\n\n\n\n                    var yAxis = d3.axisLeft()\n                        .scale(yScale);\n                    d3.select(\"#chart\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis);\n                   \n                   d3.select(\"#chart\").append('g').call(\n                        d3.axisBottom(xScale).tickValues([])\n                    ).attr('transform', 'translate(0,500)')\n\n\n                    d3.select(\"#chart\").append(\"text\").text(\"City Name\").attr(\"x\",600).attr(\"y\",530)\n\n\n\n                    //var xAxis = d3.axisBottom()\n                       // .scale(xScale.);\n\n                    //d3.select(\"#chart\").append('g')\n                      //  .attr('class', 'x axis')\n                        //.attr('transform', 'translate(0,' +height  + ')')\n                        //.call(xAxis.tickSize(0));\n\n                    d3.select(\"#chart\")\n                        .selectAll(\"div\")\n                        .data(dataGroup)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale(d.DEST_AIRPORT_ID)+300/(1.5*topN)})\n                        .attr('y',function(d){return yScale(d.Count)})\n                        .attr('height',function(d){return height-yScale(d.Count)})\n                        .attr('width',1400/(1.5*topN))\n                        .style(\"fill\",\"lightpink\");\n\n\n                    d3.select(\"#chart\").selectAll('div')\n                        .data(dataGroup, function (d) {\n                            return d.DEST_AIRPORT_ID;\n                        })\n                        .enter()\n                        .append('text')\n                        .text(function (d) {\n                            return d.DEST_DESCRIPTION[0];\n                        })\n                        .attr('class', 'ac')\n                        .attr('x', function (d) {\n                            return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[0].length/2-30;\n                        })\n                        .attr('y',  function(d){return yScale(d.Count)-20}\n                        )\n                        .attr('opacity','0')\n\n\n                    // d3.select(\"#chart\").selectAll('div')\n                    //     .data(dataGroup, function (d) {\n                    //         return d.DEST_AIRPORT_ID;\n                    //     })\n                    //     .enter()\n                    //     .append('text')\n                    //     .text(function (d) {\n                    //         return d.DEST_DESCRIPTION[1];\n                    //     })\n                    //     .attr('class', 'ac')\n                    //     .attr('x', function (d) {\n                    //         return xScale(d.DEST_AIRPORT_ID)+1000/(1.5*topN)-d.DEST_DESCRIPTION[1].length/2-70;\n                    //     })\n                    //     .attr('y',  function(d){return height-yScale(d.Count)}\n                    //     )\n                    //     .attr('opacity','0.5')\n                    //     .attr('font-size','13')\n\n\n\n\n\n                    var sorted_carrir = groupBy(dataProcessed, function(item){\n                        return [item.Carrir];\n                     });\n                    //var count=0.0;\n                    //var num=0.0;\n                    var dataGroup_carrir=new Array()\n                    dic=[]\n                    //var dic=new Array()\n                    sorted_carrir.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+m['ARR_DELAY'];\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['Carrir']=e[0]['Carrir']\n                            dic['Count']=count/num\n                            dataGroup_carrir.push(dic)\n                        }\n                    )\n\n\n\n                    var xScale_carrir = d3.scaleBand()\n                        .round(true)\n                        .paddingInner(0.05);\n\n                    xScale_carrir.domain(dataGroup_carrir.map(function (d) {\n                        return d.Carrir;\n                    }))\n                        .range([70, 1470]);\n                    height=500;\n                    var yScale_carrir = d3.scaleLinear();\n                    maxnum=0\n                    minnum=10000000\n                    for (i=0;i<dataGroup_carrir.length;i++){\n                        if (dataGroup_carrir[i]['Count']>maxnum){\n                            maxnum=dataGroup_carrir[i]['Count']\n                        }\n                        if (dataGroup_carrir[i]['Count']<minnum){\n                            minnum=dataGroup_carrir[i]['Count']\n                        }\n                    }\n\n                    yScale_carrir.domain([maxnum,minnum])\n                        .range([200,height]);\n\n\n\n\n\n\n                    var yAxis_carrir = d3.axisLeft()\n                        .scale(yScale_carrir);\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'y axis')\n                        .attr('transform', 'translate(70,' +0  + ')')\n                        .call(yAxis_carrir);\n\n\n                    var xAxis_carrir = d3.axisBottom()\n                        .scale(xScale_carrir);\n\n                    d3.select(\"#carrir\").append('g')\n                        .attr('class', 'x axis')\n                        .attr('transform', 'translate(0,' +height  + ')')\n                        .call(xAxis_carrir.tickSize(0));\n\n                    d3.select(\"#carrir\")\n                        .selectAll(\"div\")\n                        .data(dataGroup_carrir)\n                        .enter()\n                        .append('rect')\n                        .attr('class','rect')\n                        .attr('x',function(d){return xScale_carrir(d.Carrir)+10})\n                        .attr('y',function(d){return yScale_carrir(d.Count)})\n                        .attr('height',function(d){return height-yScale_carrir(d.Count)})\n                        .attr('width',80)\n                        .style(\"fill\",\"lightblue\");\n                }\n            )\n\n            d3.json(\"data/bubble.json\") \n    .then(function (data) { \n        //insert chart code here ...\n        var color, width, height, pack;\n\n        color = d3.scaleLinear()\n    .domain([0, 3])\n    .range([\"hsl(332,80%,85%)\", \"hsl(326,67%,14%)\"])\n    .interpolate(d3.interpolateHcl)\n\n    //format = d3.format(\",d\")\n\n    width = 932\n\n    height = width\n\n    pack = data => d3.pack()\n    .size([width, height])\n    .padding(3)(d3.hierarchy(data).sum(d => d.value)\n    .sort((a, b) => b.value - a.value))\n\n    const root = pack(data);\n  let focus = root;\n  let view;\n\n  const svg = d3.select('#bubble')\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n      .style(\"display\", \"block\")\n      .style(\"margin\", \"0 -14px\")\n      .style(\"background\", color(0))\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", () => zoom(root));\n\n  const node = svg.append(\"g\")\n    .selectAll(\"circle\")\n    .data(root.descendants().slice(1))\n    .join(\"circle\")\n      .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n      .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n      .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n      .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n      .on(\"click\", d => focus !== d && (zoom(d), d3.event.stopPropagation()));\n\n  const label = svg.append(\"g\")\n      .style(\"font\", \"10px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n    .selectAll(\"text\")\n    .data(root.descendants())\n    .join(\"text\")\n      .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n      .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n      .text(d => d.data.name);\n\n  zoomTo([root.x, root.y, root.r * 2]);\n\n  function zoomTo(v) {\n    const k = width / v[2];\n\n    view = v;\n\n    label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n    node.attr(\"r\", d => d.r * k);\n  }\n\n  function zoom(d) {\n    //const focus0 = focus;\n\n    focus = d;\n\n    const transition = svg.transition()\n        .duration(d3.event.altKey ? 7500 : 750)\n        .tween(\"zoom\", _d => {\n          const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n          return t => zoomTo(i(t));\n        });\n\n    label\n      .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n      .transition(transition)\n        .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n        .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n        .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n  }\n});\n\n\n\n\n        }\n    }\n</script>\n\n<style>\n    .ac:hover{\n        opacity:1;\n    }\n</style>"]}]}