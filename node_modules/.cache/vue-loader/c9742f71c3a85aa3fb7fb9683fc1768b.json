{"remainingRequest":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/src/components/Map2.vue","mtime":1575442457000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangyan/Documents/GitHub/a5-null/travelwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;;;;AAIA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"Map2.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"flight-map\">\n        <div id=\"footer\">\n        <span>U.S. Commercial Flights</span>, 2018\n        <div class=\"hint\">\n      mouseover for flights from each airport\n    </div>\n        </div>\n        <center>\n      <p>Filter By:\n          <button name=\"all\" class=\"btn btn-default\" id=\"all\">All</button>\n          <button name=\"ua\" class=\"btn btn-default\" id=\"ua\">United</button>\n          <button name=\"aa\" class=\"btn btn-default\" id=\"aa\">American</button>\n          <button name=\"as\" class=\"btn btn-default\" id=\"as\">Alaska</button>\n          <button name=\"nk\" class=\"btn btn-default\" id=\"nk\">Spirit</button>\n          <br>\n          <button name=\"dl\" class=\"btn btn-default\" id=\"dl\">Delta</button>\n          <button name=\"ha\" class=\"btn btn-default\" id=\"ha\">Hawaiian</button>\n          <button name=\"wn\" class=\"btn btn-default\" id=\"wn\">Southwest</button>\n          <button name=\"b6\" class=\"btn btn-default\" id=\"b6\">JetBlue</button>\n          <button name=\"f9\" class=\"btn btn-default\" id=\"f9\">Frontier</button>     \n      </p>\n      </center>\n        <svg width=\"960\" height=\"700\"></svg>\n        <p>Top 10 busy airport</p>\n        <svg width=\"800\" height=\"700\" id=\"chart\"></svg>\n    </div>\n</template>\n\n<script>\n\nfunction groupBy( array , f ) {\n                let groups = {};\n                array.forEach( function( o ) {\n                    let group = JSON.stringify( f(o) );\n                    groups[group] = groups[group] || [];\n                    groups[group].push( o );\n                });\n                return Object.keys(groups).map( function( group ) {\n                    return groups[group];\n                });\n            }\nfunction maxarr(arr,len){\n                var max=[];\n                arr.sort(function(a,b){\n                    return a['Count']-b['Count']\n                })\n                for (var i=0;i<len;i++){\n                    max.push(arr.pop())\n                }\n                return max.reverse()\n            }\nfunction preparedata(flights){\n    var grouped_all = groupBy(flights, function(item){\n                        return [item.origin];\n                    });\n                    var count=0.0;\n                    var num=0.0;\n                    var group_all=new Array()\n                    var dic=new Array()\n                    //console.log(grouped_all)\n                    grouped_all.forEach(\n                        function(e){\n                            count=0\n                            num=0\n                            e.forEach(\n                                function(m){\n                                    count=count+parseInt(m['delay']);\n                                    num=num+1;\n                                }\n                            )\n                            dic=[]\n                            dic['origin']=e[0]['origin']\n                            dic['delay']=count/num\n                            //console.log(dic)\n                            group_all.push(dic)\n                        }\n                    )\n\n\n                    \n\n                    var N=10\n                    group_all=maxarr(group_all,N)\n                    return group_all;\n}\nfunction update(data) {\n            data=data.sort(function(a,b){\n                return a.delay-b.delay;\n            })\n             var svg = d3.select(\"#chart\");\n             var rects = svg.selectAll(\"rect\")\n             .data(data, function (d) { return d.origin; });\n             rects.exit() //EXIT SELECTION -- here we decide to exit first\n             .transition()\n             .delay(1000)\n             .duration(1000)\n             .style(\"opacity\", 0)\n             .remove();\n\n             var yScale = d3.scaleLinear();\n                    var maxnum=0\n                    var minnum=10000000\n                    for (var i=0;i<data.length;i++){\n                        if (data[i]['delay']>maxnum){\n                            maxnum=data[i]['delay']\n                        }\n                        if (data[i]['delay']<minnum){\n                            minnum=data[i]['delay']\n                        }\n                    }\n\n                    yScale.domain([maxnum,minnum])\n                        .range([100,600]);\n\n\n\n            var colorlist=['#FF0000','#FF006B','#FF00EB','#CA00FF','#3800FF','#0000FF','#0094FF','#00FFFF','#00FFAD','#00FF00'];\n\n             rects.enter() //ENTER\n             .append(\"rect\")\n             .attr(\"fill\", function(d) { return d.c; })\n             .merge(rects) // UPDATE + ENTER\n             .transition()\n             .duration(3000)\n             .delay(function(d, i) { return i * 100; })\n             .attr(\"x\", 0)\n             .attr(\"y\", function(d, i) { return i * 35; })\n             .attr(\"width\", function(d) { return yScale(d.delay); })\n             .attr(\"height\", 25)\n             .attr(\"fill\", function(d, i) { return colorlist[i]; });\n            \n\n            svg.selectAll(\"#text\").remove();\n            var text=svg.selectAll(\"text\").data(data, function (d) { return d.origin; })\n            text.enter().append(\"text\")\n            .merge(rects) // UPDATE + ENTER\n             .transition()\n             .duration(3000)\n             .delay(function(d, i) { return i * 100; })\n            .text(function(d){\n                return d.origin;\n            }).attr(\"x\",function(d) { return yScale(d.delay)+50; })\n            .attr(\"y\", function(d, i) { return i * 35+20; })\n            .attr(\"id\",\"text\")\n\n\n             \n            }\n            \n\n\n\n\n\n    import * as d3 from 'd3v4';\n    import * as topojson from 'topojson';\n    export default {\n        name: \"Map2\",\n        mounted(){\n            var svg = d3.select(\"svg\"),\n                width = +svg.attr(\"width\"),\n                height = +svg.attr(\"height\");\n\n            var projection = d3.geoAlbers()\n                .translate([width *0.6, height * 0.6])\n                .scale(550);\n\n            // var radius = d3.scaleSqrt()\n            //     .domain([0, 100])\n            //     .range([0, 14]);\n\n            var path = d3.geoPath()\n                .projection(projection)\n                .pointRadius(2.5);\n\n            var voronoi = d3.voronoi()\n                .extent([[-1, -1], [width + 1, height + 1]]);\n\n            var filter_mode = \"#all\";\n            setFilterMode(filter_mode)\n\n            var airports0;\n            var flights0;\n            var us0;\n\n            d3.queue()\n                .defer(d3.json, \"data/us.json\")\n                .defer(d3.csv, \"data/airports.csv\", typeAirport)\n                .defer(d3.csv, \"data/flights-aggregation.csv\", typeFlight)\n                .await(ready);\n\n            function ready(error, us, airports, flights) {\n                if (error) throw error;\n                flights0 = flights.slice();\n                airports0 = airports.slice();\n                us0 = us;\n                // console.log(airports[2531])\n                flights = flights.filter(d => d.carrier == 'all');\n\n                var airportByIata = d3.map(airports, function(d) { return d.iata; });\n\n                flights.forEach(function(flight) {\n                    var source = airportByIata.get(flight.origin),\n                        target = airportByIata.get(flight.destination);\n                    source.arcs.coordinates.push([source, target]);\n                    target.arcs.coordinates.push([target, source]);\n                    source.delay = flight.delay;\n                });\n                // console.log(airports)\n\n                \n\n                airports = airports\n                    .filter(function(d) { return d.arcs.coordinates.length; });\n\n\n                svg.append(\"path\")\n                    .datum(topojson.feature(us, us.objects.land))\n                    .attr(\"class\", \"land\")\n                    // .style('fill','#ddd')\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n                    .attr(\"class\", \"state-borders\")\n                    // .style('fill','none')\n                    // .style('stroke','#fff')\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum({type: \"MultiPoint\", coordinates: airports})\n                    .attr(\"class\", \"airport-dots\")\n                    .attr(\"d\", path);\n\n                var airport = svg.selectAll(\".airport\")\n                    .data(airports)\n                    .enter().append(\"g\")\n                    .attr(\"class\", \"airport\");\n\n                airport.append(\"title\")\n                    .text(function(d) { return d.iata + \"\\n\" + d.arcs.coordinates.length + \" flights\" + \"\\n\"+\"median delay: \"+d.delay +\" minutes\"; });\n\n                airport.append(\"path\")\n                    .attr(\"class\", \"airport-arc\")\n                    // .style('fill','none')\n                    .attr(\"d\", function(d) { return path(d.arcs); })\n                    .on(\"mouseover\", function(d) { d3.select(\"#footer span\").text(d.name); });\n\n                airport.append(\"path\")\n                    .data(voronoi.polygons(airports.map(projection)))\n                    .attr(\"class\", \"airport-cell\")\n                    .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n                \n                var chart_data=preparedata(flights);\n    update(chart_data);\n\n\n            }\n\n            function typeAirport(d) {\n                d[0] = +d.longitude;\n                d[1] = +d.latitude;\n                d.arcs = {type: \"MultiLineString\", coordinates: []};\n                d.delay = null;\n                \n                return d;\n            }\n\n            function typeFlight(d) {\n                d.count = +d.count;\n                return d;\n            }\n\n            //filter\n\n    //console.log(airports)\n\n    d3.select(\"#all\")\n    .on(\"click\", function () {\n    setFilterMode(\"#all\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'all');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    \n\n\n\n\n\n\n\n\n    var chart_data=preparedata(flights)\n    update(chart_data)\n\n\n   \n    });\n    \n\n\n    //console.log(airports)\n\n    d3.select(\"#ua\")\n    .on(\"click\", function () {\n    setFilterMode(\"#ua\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'UA');\n    airports = airports0;\n    us = us0;\n    airports.arcs = {type: \"MultiLineString\", coordinates: []};\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#aa\")\n    .on(\"click\", function () {\n    setFilterMode(\"#aa\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'AA');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#as\")\n    .on(\"click\", function () {\n    setFilterMode(\"#as\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'AS');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#nk\")\n    .on(\"click\", function () {\n    setFilterMode(\"#nk\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'NK');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#dl\")\n    .on(\"click\", function () {\n    setFilterMode(\"#dl\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'DL');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#ha\")\n    .on(\"click\", function () {\n    setFilterMode(\"#ha\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'HA');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#wn\")\n    .on(\"click\", function () {\n    setFilterMode(\"#wn\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'WN');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#b6\")\n    .on(\"click\", function () {\n    setFilterMode(\"#b6\")\n    var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'B6');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    d3.select(\"#f9\")\n    .on(\"click\", function () {\n    setFilterMode(\"#f9\")\n        var dots = d3.selectAll('.airport-dots')\n\n    dots\n        .remove();\n    var arcs = d3.selectAll('.airport-arc')\n    arcs\n        .remove();\n\n        var ap = d3.selectAll('.airport')\n    ap\n        .remove();\n\n        var cells = d3.selectAll('.airport-cell')\n    cells\n        .remove();\n        \n\n        var land = d3.selectAll('.land')\n    land\n        .remove();\n\n        var boarders = d3.selectAll('.state-boarder')\n    boarders\n        .remove();\n    var flights, airports, us;\n    flights = flights0.filter(d => d.carrier == 'F9');\n    airports = airports0;\n    us = us0;\n    transitionMap(us, airports,flights);\n    var chart_data=preparedata(flights)\n    update(chart_data)\n    });\n\n    function setFilterMode(id) {\n    d3.select(\"#all\").style(\"background-color\", \"white\");\n    d3.select(\"#ua\").style(\"background-color\", \"white\");\n    d3.select(\"#aa\").style(\"background-color\", \"white\");\n    d3.select(\"#as\").style(\"background-color\", \"white\");\n    d3.select(\"#nk\").style(\"background-color\", \"white\");\n    d3.select(\"#dl\").style(\"background-color\", \"white\");\n    d3.select(\"#ha\").style(\"background-color\", \"white\");\n    d3.select(\"#wn\").style(\"background-color\", \"white\");\n    d3.select(\"#b6\").style(\"background-color\", \"white\");\n    d3.select(\"#f9\").style(\"background-color\", \"white\");\n    d3.select(id).style(\"background-color\", \"grey\");\n    filter_mode = id;\n}\n\n    function transitionMap(us,airports,flights) {\n        //airports = [];\n        // console.log(airports[2531]) \n        // airports = d3.csv('data/airports.csv', typeAirport)    \n\n        var airportByIata = d3.map(airports, function(d) { return d.iata; });\n\n\n            airports.forEach(function(airport) {\n                airport.arcs.coordinates = [];\n            });\n\n                flights.forEach(function(flight) {\n                    var source = airportByIata.get(flight.origin),\n                        target = airportByIata.get(flight.destination);\n                    source.arcs.coordinates.push([source, target]);\n                    target.arcs.coordinates.push([target, source]);\n                    source.delay = flight.delay;\n                });\n\n                airports = airports\n                    .filter(function(d) { return d.arcs.coordinates.length; });\n\n                svg.append(\"path\")\n                    .datum(topojson.feature(us, us.objects.land))\n                    .attr(\"class\", \"land\")\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n                    .attr(\"class\", \"state-borders\")\n                    .attr(\"d\", path);\n\n                svg.append(\"path\")\n                    .datum({type: \"MultiPoint\", coordinates: airports})\n                    .attr(\"class\", \"airport-dots\")\n                    .attr(\"d\", path);\n\n                var airport = svg.selectAll(\".airport\")\n                    .data(airports)\n                    .enter().append(\"g\")\n                    .attr(\"class\", \"airport\");\n                airport.append(\"title\")\n                    .text(function(d) { return d.iata + \"\\n\" + d.arcs.coordinates.length + \" flights\" + \"\\n\"+\"median delay: \"+d.delay +\" minutes\"; });\n\n                airport.append(\"path\")\n                    .attr(\"class\", \"airport-arc\")\n                    // .style('fill','none')\n                    .attr(\"d\", function(d) { return path(d.arcs); })\n                    .on(\"mouseover\", function(d) { d3.select(\"#footer span\").text(d.name); });\n\n                airport.append(\"path\")\n                    .data(voronoi.polygons(airports.map(projection)))\n                    .attr(\"class\", \"airport-cell\")\n                    .attr(\"d\", function(d) { return d ? \"M\" + d.join(\"L\") + \"Z\" : null; });\n        \n}\n\n\n        }\n    }\n</script>\n<style>\n\n    .land {\n        fill: #ddd;\n    }\n\n    .state-borders {\n        fill: none;\n        stroke: #fff;\n    }\n\n    .airport-arc {\n        fill: none;\n    }\n\n    .airport:hover .airport-arc {\n        stroke: #f00;\n    }\n\n    .airport-cell {\n        fill: none;\n        stroke: #000;\n        stroke-opacity: 0.1;\n        pointer-events: all;\n    }\n\n</style>"]}]}